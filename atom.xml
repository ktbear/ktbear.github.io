<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>点滴&#39;s Blog</title>
  
  <subtitle>&lt;span class=&quot;element&quot;&gt;&lt;/span&gt;</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.ktbear.top/"/>
  <updated>2020-05-06T09:22:04.154Z</updated>
  <id>http://www.ktbear.top/</id>
  
  <author>
    <name>点滴</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>聊一聊微服务（上）</title>
    <link href="http://www.ktbear.top/service1/28/"/>
    <id>http://www.ktbear.top/service1/28/</id>
    <published>2020-04-28T02:06:00.000Z</published>
    <updated>2020-05-06T09:22:04.154Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/05/06/3POFgbz5awRUc1X.jpg" alt></p><a id="more"></a><h2 id="一、为什么需要微服务"><a href="#一、为什么需要微服务" class="headerlink" title="一、为什么需要微服务"></a>一、为什么需要微服务</h2><p>​ 传统开发模式下，绝大部分的Web应用都是采用单体架构的风格来进行构建的，这意味着Web应用是作为单个可部署的软件制品进行交付的，所有的接口、业务逻辑、持久层都被打包在一个Web应用中，并且部署在一台服务器上，这种开发模式会带来诸多不便，多团队协同开发的成本极高。</p><h4 id="1-传统开发方式（单体应用）"><a href="#1-传统开发方式（单体应用）" class="headerlink" title="1.传统开发方式（单体应用）"></a>1.传统开发方式（单体应用）</h4><p>​ <img src="https://i.loli.net/2020/05/06/U7FtHq61iueyNWJ.png" alt></p><ul><li><p>单体应用存在的问题</p><p>1.1随着业务的发展，开发变得越来越复杂。<br>1.2修改、新增某个功能，需要对整个系统进行测试、重新部署。<br>1.3一个模块出现问题，很可能导致整个系统崩溃。<br>1.4多个开发团队同时对数据进行管理，容易产生安全漏洞。<br>1.5各个模块使用同-种技术进行开发，各个模块很难根据实际情况选择更合适的技术框架，局限性很大。<br>1.6模块内容过于复杂，如果员工离职，可能需要很长时间才能完成工作交接。</p></li></ul><h4 id="2-微服务架构"><a href="#2-微服务架构" class="headerlink" title="2.微服务架构"></a>2.微服务架构</h4><p><img src="https://i.loli.net/2020/05/06/vKcjUR7MfYlsh6p.png" alt="1588405762151"></p><p><img src="https://i.loli.net/2020/05/06/DomQ9we1P4lVivH.png" alt="1588410701854"></p><h4 id="3-分布式、集群"><a href="#3-分布式、集群" class="headerlink" title="3.分布式、集群"></a>3.分布式、集群</h4><ul><li>集群:一台服务器无法负荷高并发的数据访问量，那么就设置十台服务器-起分担压力， 十台不行就设置一百台(物理层面)。很多人干同-件事情，来分摊压力。</li><li>分布式:将一个复杂问题拆分成若干个简单的小问题，将一个大型的项目架构拆分成若干个微服务来协同完成(软件设计层面)。将一 个庞大的工作拆分成若干个小步骤，分别由不同的人完成这些小步骤，最终将所有的结果进行整合实现大的需求。</li></ul><h4 id="4-微服务优点"><a href="#4-微服务优点" class="headerlink" title="4.微服务优点"></a>4.微服务优点</h4><ul><li>各个服务的开发、测试、部署都相互独立，比如用户服务就可以拆分作为<br>一个单独的服务，而它的开发也不用依赖于其他服务，如果用户量很大，<br>我们可以很容易的对其进行负载。</li><li>当一个新需求出现时，特别是在一一个庞大的项目系统中，你得去考虑各方<br>的问题，兼容性、影响度等等，而使用微服务则可以直接跳过这些废时又<br>烧脑的环节。</li><li>使用微服务将项目进行拆分之后，各服务之间就消除了诸多限制，只需要<br>保证对外提供的接口正常可用，至于使用什么语言、什么框架通通不用关<br>心。</li></ul><h4 id="5-微服务的缺点"><a href="#5-微服务的缺点" class="headerlink" title="5.微服务的缺点"></a>5.微服务的缺点</h4><ul><li>上面我们提到微服务的拆分是基于业务的，不是我们随心所欲，想怎么拆<br>就怎么拆的，那么问题来了，由谁来拆，怎么拆?这就给团队协作沟通带<br>来了很多挑战。</li><li>当服务调用方需要使用某服务的接口时，首先需要找到该服务的提供方，<br>通常在一一个大公司中，这种场景是跨部门的，沟通成本可想而知。同时，<br>如果服务的提供方需要对某个接口进行修改，也得和各个服务调用方进行<br>沟通。</li><li>由于各个服务相互独立，它们的数据也是独立的，这就会带来-一个问题，<br>当调用多个服务接口来进行操作时，如何保证各个服务的数据- -致性，这<br>既是问题，也是难点。</li></ul><h4 id="6-微服务框架对比"><a href="#6-微服务框架对比" class="headerlink" title="6.微服务框架对比"></a>6.微服务框架对比</h4><p><img src="https://i.loli.net/2020/05/06/7GStEnpLFIkogUa.png" alt="1588407091660"></p><h2 id="二、为什么是Spring-Cloud"><a href="#二、为什么是Spring-Cloud" class="headerlink" title="二、为什么是Spring  Cloud"></a>二、为什么是Spring Cloud</h2><ul><li>Spring Cloud完全基于Spring Boot,服务调用方式是基于REST API，整合了<br>各种成熟的产品和架构，同时基于Spring Boot也使得整体的开发、配置、<br>部署都非常方便。</li><li>Spring系的产品集功能齐全、简单好用、性能优越、文档规范等等于一身，<br>因此Spring Cloud还是微服务架构中一个十分优越的实现方案。</li></ul><h4 id="1-Spring-Cloud-架构图"><a href="#1-Spring-Cloud-架构图" class="headerlink" title="1.Spring Cloud 架构图"></a>1.Spring Cloud 架构图</h4><p><img src="https://i.loli.net/2020/05/06/NCVnXzK4Ys8P2vM.png" alt="1588407007493"></p><h4 id="2-Spring-Cloud-核心组件"><a href="#2-Spring-Cloud-核心组件" class="headerlink" title="2.Spring Cloud 核心组件"></a>2.Spring Cloud 核心组件</h4><p><img src="assets/1588692487250.png" alt="1588692487250"></p><ul><li><p>服务治理的核心又三部分组成:服务提供者、服务消费者、注册中心。</p><p><img src="https://i.loli.net/2020/05/06/3B4PY8v9DnJswoS.png" alt="1588419323735"></p><ul><li>在分布式系统架构中，每个微服务在启动时，将自己的信息存储在注册中心，叫做服务注册。</li><li>服务消费者从注册中心获取服务提供者的网络信息，通过该信息调用服务,叫做服务发现。</li><li>Spring Cloud的服务治理使用Eureka来实现，Eureka 是Netflix开源的基于REST的服务治理解决方案，SpringCloud集成了Eureka, 提供服务注册和服务发现的功能，可以和基于Spring Boot搭建的微服务应用轻松完成整合，开箱即用(Spring Cloud Eureka)。</li></ul></li></ul><h4 id="3-Spring-Cloud-Eureka"><a href="#3-Spring-Cloud-Eureka" class="headerlink" title="3.Spring Cloud Eureka"></a>3.Spring Cloud Eureka</h4><ul><li>Eureka Server：注册中心</li><li>Eureka Client：所有要进行注册的微服务通过Eureka Client连接到Eureka Server完成注册（相当于服务消费者和服务提供者都要集成Eureka Client然后把服务注册到Eureka Server中）。</li></ul><h2 id="三、Eureka-Server代码实现"><a href="#三、Eureka-Server代码实现" class="headerlink" title="三、Eureka Server代码实现"></a>三、Eureka Server代码实现</h2><h4 id="1-新建项目名为springcloud的Maven父工程"><a href="#1-新建项目名为springcloud的Maven父工程" class="headerlink" title="1.新建项目名为springcloud的Maven父工程"></a>1.新建项目名为springcloud的Maven父工程</h4><ul><li><p>父工程pom.xml配置</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">  <span class="comment"><!--springboot父依赖--></span></span><br><span class="line">  <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">groupId</span>></span>org.springframework.boot<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>spring-boot-starter-parent<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">version</span>></span>2.0.6.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">  <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">    <span class="comment"><!--web依赖--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">      <span class="tag"><<span class="name">groupId</span>></span>org.springframework.boot<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">      <span class="tag"><<span class="name">artifactId</span>></span>spring-boot-starter-web<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--lombok--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">      <span class="tag"><<span class="name">groupId</span>></span>org.projectlombok<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">      <span class="tag"><<span class="name">artifactId</span>></span>lombok<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">      <span class="tag"><<span class="name">optional</span>></span>true<span class="tag"></<span class="name">optional</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--解决JDK9以上没有JAXB API的问题需加入以下四个依赖，9以下可以不加--></span></span><br><span class="line">    <span class="comment"><!--</span></span><br><span class="line"><span class="comment">        <dependency></span></span><br><span class="line"><span class="comment">            <groupId>javax.xml.bind</groupId></span></span><br><span class="line"><span class="comment">            <artifactId>jaxb-api</artifactId></span></span><br><span class="line"><span class="comment">            <version>2.3.0</version></span></span><br><span class="line"><span class="comment">        </dependency></span></span><br><span class="line"><span class="comment">        <dependency></span></span><br><span class="line"><span class="comment">            <groupId>com.sun.xml.bind</groupId></span></span><br><span class="line"><span class="comment">            <artifactId>jaxb-impl</artifactId></span></span><br><span class="line"><span class="comment">            <version>2.3.0</version></span></span><br><span class="line"><span class="comment">        </dependency></span></span><br><span class="line"><span class="comment">        <dependency></span></span><br><span class="line"><span class="comment">            <groupId>com.sun.xml.bind</groupId></span></span><br><span class="line"><span class="comment">            <artifactId>jaxb-core</artifactId></span></span><br><span class="line"><span class="comment">            <version>2.3.0</version></span></span><br><span class="line"><span class="comment">        </dependency></span></span><br><span class="line"><span class="comment">        <dependency></span></span><br><span class="line"><span class="comment">            <groupId>javax.activation</groupId></span></span><br><span class="line"><span class="comment">            <artifactId>activation</artifactId></span></span><br><span class="line"><span class="comment">            <version>1.1.1</version></span></span><br><span class="line"><span class="comment">        </dependency></span></span><br><span class="line"><span class="comment">        --></span></span><br><span class="line">  <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line">  <span class="comment"><!--springCloud依赖--></span></span><br><span class="line">  <span class="tag"><<span class="name">dependencyManagement</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">      <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-dependencies<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>Finchley.SR2<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">type</span>></span>pom<span class="tag"></<span class="name">type</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">scope</span>></span>import<span class="tag"></<span class="name">scope</span>></span></span><br><span class="line">      <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line">  <span class="tag"></<span class="name">dependencyManagement</span>></span></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="2-在父工程下创建名为eurekaserver的模块（Module）即注册中心"><a href="#2-在父工程下创建名为eurekaserver的模块（Module）即注册中心" class="headerlink" title="2.在父工程下创建名为eurekaserver的模块（Module）即注册中心"></a>2.在父工程下创建名为eurekaserver的模块（Module）即注册中心</h4></li><li><p>eurekaserver模块下pom.xml配置</p></li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>eurekaserver<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--需要导入的注册中心组件--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-server<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-在包eurekaserver-src-main-resource下创建配置文件application-yml，添加Eureka-Server相关的配置"><a href="#3-在包eurekaserver-src-main-resource下创建配置文件application-yml，添加Eureka-Server相关的配置" class="headerlink" title="3.在包eurekaserver.src.main.resource下创建配置文件application.yml，添加Eureka Server相关的配置"></a>3.在包eurekaserver.src.main.resource下创建配置文件application.yml，添加Eureka Server相关的配置</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Eureka Server服务端口号随便配置</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8761</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#eureka.register-with-eureka: 是否将当前的Eureka Server服务作为客户端进行注册</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment">#是否要注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">#是否要同步其他注册中心（EurekaServer）的数据</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment">#注册中心的访问路径</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-在包eurekaserver-src-main创建包org-example（根据自己的创建），springboot启动类"><a href="#4-在包eurekaserver-src-main创建包org-example（根据自己的创建），springboot启动类" class="headerlink" title="4.在包eurekaserver.src.main创建包org.example（根据自己的创建），springboot启动类"></a>4.在包eurekaserver.src.main创建包org.example（根据自己的创建），springboot启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.eureka.server.EnableEurekaServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span>   <span class="comment">//声明该类是一个EurekaServer微服务,提供服务注册和服务发现功能，即注册中心</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EurekaServerApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(EurekaServerApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="5-启动微服务显示页面（http-localhost-8761）"><a href="#5-启动微服务显示页面（http-localhost-8761）" class="headerlink" title="5.启动微服务显示页面（http://localhost:8761）"></a>5.启动微服务显示页面（<a href="http://localhost:8761）">http://localhost:8761）</a></h4><p><img src="https://i.loli.net/2020/05/06/4IFTmzpWwDtuLHU.png" alt="1588420890055"></p><h2 id="四、Eureka-Client代码实现"><a href="#四、Eureka-Client代码实现" class="headerlink" title="四、Eureka Client代码实现"></a>四、Eureka Client代码实现</h2><h4 id="1-在父工程下创建子模块eurekaclient"><a href="#1-在父工程下创建子模块eurekaclient" class="headerlink" title="1.在父工程下创建子模块eurekaclient"></a>1.在父工程下创建子模块eurekaclient</h4><ul><li>eurekaclient子模块下pom.xml配置</li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>eurekaclient<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--所需的eureka-client依赖--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-client<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="2-在包eurekaclient-src-main-resource下创建配置文件application-yml，添加Eureka-Client相关的配置"><a href="#2-在包eurekaclient-src-main-resource下创建配置文件application-yml，添加Eureka-Client相关的配置" class="headerlink" title="2.在包eurekaclient.src.main.resource下创建配置文件application.yml，添加Eureka Client相关的配置"></a>2.在包eurekaclient.src.main.resource下创建配置文件application.yml，添加Eureka Client相关的配置</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#端口随便配置</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8010</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#当前服务注册在Eureka Server上的名称，后面可以直接通过名字访问</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">provider</span>  <span class="comment">#假设是服务提供者</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#将注册中心的地址配置过来（注册中心访问地址）</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#是否将当前服务的ip注册到EurekaServer</span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-在包eurekaclient-src-main创建包org-example（根据自己的创建），springboot启动类"><a href="#3-在包eurekaclient-src-main创建包org-example（根据自己的创建），springboot启动类" class="headerlink" title="3.在包eurekaclient.src.main创建包org.example（根据自己的创建），springboot启动类"></a>3.在包eurekaclient.src.main创建包org.example（根据自己的创建），springboot启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProviderApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(ProviderApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>4.将服务提供者注册到注册中心，首先启动EurekaServerApplication（注册中心），再启动ProviderApplication（服务提供者），再浏览器地址栏输入注册中心地址：<a href="http://localhost:8761/，显示页面如下：" target="_blank" rel="noopener">http://localhost:8761/，显示页面如下：</a></p><p><img src="https://i.loli.net/2020/05/06/CH9uEU1BVfIWw3x.png" alt="1588427608086"></p><ul><li>如果没有出现如图的情况，查看一下eurekaclient或者eurekaserver的pom.xml依赖，注意不要把eurekaclient的依赖写成spring-cloud-netflix-eureka-client，请仔细观察</li></ul><p>5.我们可以理解为每个服务提供者就充当一个一个的功能模块。这里基于eurekaclient（服务提供者）写个小业务便于理解，首先在eurekaclint(eurekaclient.src.main.java.org.example)目录下分别创建dao层，entity,controller层，这里省略service层</p><ul><li><p>entity</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.entity;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="comment">//使用lombok需要下载lombok插件</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>Dao层接口</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentRepository</span> </span>{</span><br><span class="line">    <span class="comment">//查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">//查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line">    <span class="comment">//添加或修改</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveOrUpdate</span><span class="params">(Student student)</span></span>;</span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">long</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>Dao层实现类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.dao.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.dao.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentRepositoryImpl</span> <span class="keyword">implements</span> <span class="title">StudentRepository</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向Map集合添加数据</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map<Long, Student> studentMap;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> {</span><br><span class="line">        studentMap = <span class="keyword">new</span> HashMap<>();</span><br><span class="line">        studentMap.put(<span class="number">1L</span>, <span class="keyword">new</span> Student(<span class="number">1L</span>, <span class="string">"刘备"</span>, <span class="number">24</span>));</span><br><span class="line">        studentMap.put(<span class="number">3L</span>, <span class="keyword">new</span> Student(<span class="number">3L</span>, <span class="string">"关羽"</span>, <span class="number">23</span>));</span><br><span class="line">        studentMap.put(<span class="number">2L</span>, <span class="keyword">new</span> Student(<span class="number">2L</span>, <span class="string">"张飞"</span>, <span class="number">22</span>));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span>  studentMap.values();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> studentMap.get(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveOrUpdate</span><span class="params">(Student student)</span> </span>{</span><br><span class="line">        studentMap.put(student.getId(), student);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(<span class="keyword">long</span> id)</span> </span>{</span><br><span class="line">        studentMap.remove(id);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>Controller层</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.dao.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/student"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentRepository studentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findAll();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findById(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/deleteById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line">        studentRepository.deleteById(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>整体项目结构</p><p><img src="https://i.loli.net/2020/05/06/GEnmQBMLfdPXjvS.png" alt="1588435093112"></p></li><li><p>测试eurekaclient功能模块</p><p>浏览器输入：<a href="http://localhost:8010/student/findAll测试我们刚刚写的查询学生方法，其他接口自行测试，返回结果：" target="_blank" rel="noopener">http://localhost:8010/student/findAll测试我们刚刚写的查询学生方法，其他接口自行测试，返回结果：</a></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[{<span class="attr">"id"</span>:<span class="number">1</span>,<span class="attr">"name"</span>:<span class="string">"刘备"</span>,<span class="attr">"age"</span>:<span class="number">24</span>},{<span class="attr">"id"</span>:<span class="number">2</span>,<span class="attr">"name"</span>:<span class="string">"张飞"</span>,<span class="attr">"age"</span>:<span class="number">22</span>},{<span class="attr">"id"</span>:<span class="number">3</span>,<span class="attr">"name"</span>:<span class="string">"关羽"</span>,<span class="attr">"age"</span>:<span class="number">23</span>}]</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="五、RestTemplate组件的使用"><a href="#五、RestTemplate组件的使用" class="headerlink" title="五、RestTemplate组件的使用"></a>五、RestTemplate组件的使用</h2><h4 id="1-什么是RestTemplate"><a href="#1-什么是RestTemplate" class="headerlink" title="1.什么是RestTemplate?"></a>1.什么是RestTemplate?</h4><p>RestTemplate是Spring框架提供的基于REST的服务组件，底层是对HTTP请求及响应进行了封装，提供了很多访问RETS服务的方法，可以简化代码开发。根据上面我们知道的，既然是微服务，那么eurekaclient模块与另外一个模块之间是又是怎么调用的呢？没错就是通过RestTemplate组件来实现的模块与模块之间的调用，这样以来我们就可以通过RestTemplate来调用eurekaclient模块。</p><h4 id="2-RestTemplate的使用"><a href="#2-RestTemplate的使用" class="headerlink" title="2.RestTemplate的使用"></a>2.RestTemplate的使用</h4><ul><li><p>在父工程下创建resttemplate模块（maven）,pom.xml配置</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>resttemplate<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建调用另外一个模块所需的实体类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.entity;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>springboot启动类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTemplateApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(RestTemplateApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供RestTemplate实例将其添加到ioc容器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>编写Controller层</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/rest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestTmpController</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * 调用eurekaclient模块下的Controller里面的接口</span></span><br><span class="line"><span class="comment">     * getForEntity中的的get为GET请求,参数一：要调用的地址 参数二：结果集</span></span><br><span class="line"><span class="comment">     * restTemplate.getForEntity().getBody()作用与restTemplate.getForObject（）作用相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAllR"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>  restTemplate.getForEntity(</span><br><span class="line">            <span class="string">"http://localhost:8010/student/findAll"</span>,                                  Collection<span class="class">.<span class="keyword">class</span>).<span class="title">getBody</span>()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAllR2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll2</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://localhost:8010/student/findAll"</span>,Collection<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForEntity(<span class="string">"http://localhost:8010/student/findById/"</span>,Student<span class="class">.<span class="keyword">class</span>,<span class="title">id</span>).<span class="title">getBody</span>()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findById2/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById2</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://localhost:8010/student/findById/"</span>,Student<span class="class">.<span class="keyword">class</span>,<span class="title">id</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line"></span><br><span class="line">        restTemplate.postForEntity(<span class="string">"http://localhost:8010/student/save"</span>,student,<span class="keyword">null</span>).getBody();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/save2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save2</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line"></span><br><span class="line">        restTemplate.postForObject(<span class="string">"http://localhost:8010/student/save"</span>,student,<span class="keyword">null</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line">        restTemplate.put(<span class="string">"http://localhost:8010/student/update"</span>,student);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"//deleteById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line">        restTemplate.delete(<span class="string">"http://localhost:8010/student/update"</span>,id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>这里没有配置配置文件，所有默认端口号为8080，接着按顺序启动项（eurekaserver注册中心->eurekaclient服务提供者->resttemplate服务消费者）</p></li><li><p>浏览器访问resttemplate地址：<a href="http://localhost:8080/rest/findAllR，显示结果：" target="_blank" rel="noopener">http://localhost:8080/rest/findAllR，显示结果：</a></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[{<span class="attr">"id"</span>:<span class="number">1</span>,<span class="attr">"name"</span>:<span class="string">"刘备"</span>,<span class="attr">"age"</span>:<span class="number">24</span>},{<span class="attr">"id"</span>:<span class="number">2</span>,<span class="attr">"name"</span>:<span class="string">"张飞"</span>,<span class="attr">"age"</span>:<span class="number">22</span>},{<span class="attr">"id"</span>:<span class="number">3</span>,<span class="attr">"name"</span>:<span class="string">"关羽"</span>,<span class="attr">"age"</span>:<span class="number">23</span>}]</span><br></pre></td></tr></tbody></table></figure><p>这里通过resttemplate消费者里面的findAll方法成功调用了eurekaclient服务提供者的查询方法，其他方法自行测试，注意：resttemplate并不算是严格的服务消费者，因为并没有向注册中心注册,它与服务消费者的区别就是是否向注册中心注册</p></li></ul><h2 id="六、服务消费者Consumer代码实现"><a href="#六、服务消费者Consumer代码实现" class="headerlink" title="六、服务消费者Consumer代码实现"></a>六、服务消费者Consumer代码实现</h2><h4 id="1-在父工程下创建consumer服务消费者模块，pom-xml"><a href="#1-在父工程下创建consumer服务消费者模块，pom-xml" class="headerlink" title="1.在父工程下创建consumer服务消费者模块，pom.xml"></a>1.在父工程下创建consumer服务消费者模块，pom.xml</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>consumer<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--添加依赖--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-client<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="2-创建application-yml配置文件"><a href="#2-创建application-yml配置文件" class="headerlink" title="2.创建application.yml配置文件"></a>2.创建application.yml配置文件</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#端口自定义</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8020</span></span><br><span class="line"><span class="comment">#应用名字</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consumer</span></span><br><span class="line">    <span class="comment">#注册中心地址</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#进行注册</span></span><br></pre></td></tr></tbody></table></figure><h4 id="3-创建启动类"><a href="#3-创建启动类" class="headerlink" title="3.创建启动类"></a>3.创建启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(ConsumerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//提供RestTemplate实例将其添加到ioc容器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="4-创建实体类，跟resttemplate模块一样"><a href="#4-创建实体类，跟resttemplate模块一样" class="headerlink" title="4.创建实体类，跟resttemplate模块一样"></a>4.创建实体类，跟resttemplate模块一样</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.entity;</span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="5-创建Controller-跟resttemplate模块一样"><a href="#5-创建Controller-跟resttemplate模块一样" class="headerlink" title="5.创建Controller,跟resttemplate模块一样"></a>5.创建Controller,跟resttemplate模块一样</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/consumer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerController</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * 调用eurekaclient模块下的Controller里面的接口</span></span><br><span class="line"><span class="comment">     * getForEntity中的的get为GET请求,参数一：要调用的地址 参数二：结果集</span></span><br><span class="line"><span class="comment">     * restTemplate.getForEntity().getBody()作用与restTemplate.getForObject（）作用相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAllR"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> restTemplate.getForEntity(<span class="string">"http://localhost:8010/student/findAll"</span>,Collection<span class="class">.<span class="keyword">class</span>).<span class="title">getBody</span>()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAllR2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll2</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://localhost:8010/student/findAll"</span>,Collection<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查询</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForEntity(<span class="string">"http://localhost:8010/student/findById/"</span>,Student<span class="class">.<span class="keyword">class</span>,<span class="title">id</span>).<span class="title">getBody</span>()</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findById2/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById2</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://localhost:8010/student/findById/"</span>,Student<span class="class">.<span class="keyword">class</span>,<span class="title">id</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line"></span><br><span class="line">        restTemplate.postForEntity(<span class="string">"http://localhost:8010/student/save"</span>,student,<span class="keyword">null</span>).getBody();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/save2"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save2</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line"></span><br><span class="line">       restTemplate.postForObject(<span class="string">"http://localhost:8010/student/save"</span>,student,<span class="keyword">null</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改</span></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line">        restTemplate.put(<span class="string">"http://localhost:8010/student/update"</span>,student);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除</span></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"//deleteById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line">        restTemplate.delete(<span class="string">"http://localhost:8010/student/update"</span>,id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="6-按顺序启动服务（eurekaserver注册中心-gt-eurekaclient服务提供者-gt-consumer服务消费者）"><a href="#6-按顺序启动服务（eurekaserver注册中心-gt-eurekaclient服务提供者-gt-consumer服务消费者）" class="headerlink" title="6.按顺序启动服务（eurekaserver注册中心->eurekaclient服务提供者->consumer服务消费者）"></a>6.按顺序启动服务（eurekaserver注册中心->eurekaclient服务提供者->consumer服务消费者）</h4><p>注：这里说明下consumer服务消费者在某些时候也可以当成服务提供者，主要区别在于谁调用谁，如果后者调用前者，那么后者就是服务消费者，前者是服务提供者，反之，前者是服务消费者，后者是服务提供者。</p><h4 id="7-浏览器输入eurekaserver注册中心地址：http-localhost-8761"><a href="#7-浏览器输入eurekaserver注册中心地址：http-localhost-8761" class="headerlink" title="7.浏览器输入eurekaserver注册中心地址：http://localhost:8761/"></a>7.浏览器输入eurekaserver注册中心地址：<a href="http://localhost:8761/" target="_blank" rel="noopener">http://localhost:8761/</a></h4><p><img src="https://i.loli.net/2020/05/06/p3eXzPrK8ulSMna.png" alt="1588582648490"></p><p>可以看到成功注册了服务消费者和服务提供者，接下来只需要服务消费者调用服务提供者。</p><h4 id="8-输入地址调用服务提供者：http-localhost-8020-consumer-findAllR"><a href="#8-输入地址调用服务提供者：http-localhost-8020-consumer-findAllR" class="headerlink" title="8.输入地址调用服务提供者：http://localhost:8020/consumer/findAllR"></a>8.输入地址调用服务提供者：<a href="http://localhost:8020/consumer/findAllR" target="_blank" rel="noopener">http://localhost:8020/consumer/findAllR</a></h4><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[{<span class="attr">"id"</span>:<span class="number">1</span>,<span class="attr">"name"</span>:<span class="string">"刘备"</span>,<span class="attr">"age"</span>:<span class="number">24</span>},{<span class="attr">"id"</span>:<span class="number">2</span>,<span class="attr">"name"</span>:<span class="string">"张飞"</span>,<span class="attr">"age"</span>:<span class="number">22</span>},{<span class="attr">"id"</span>:<span class="number">3</span>,<span class="attr">"name"</span>:<span class="string">"关羽"</span>,<span class="attr">"age"</span>:<span class="number">23</span>}]</span><br></pre></td></tr></tbody></table></figure><p>其他方法自行测试</p><blockquote><p>声明：此文章是结合B站’楠哥教你学Java’视频自己整理出来的笔记，如有不清楚的可以去看楠哥视频。</p></blockquote><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/05/06/3POFgbz5awRUc1X.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="springCloud" scheme="http://www.ktbear.top/categories/springCloud/"/>
    
    
      <category term="微服务" scheme="http://www.ktbear.top/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="springCloud" scheme="http://www.ktbear.top/tags/springCloud/"/>
    
      <category term="笔记" scheme="http://www.ktbear.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Linux之JDK、Tomcat安装及环境配置</title>
    <link href="http://www.ktbear.top/el/20/"/>
    <id>http://www.ktbear.top/el/20/</id>
    <published>2020-04-20T10:34:00.000Z</published>
    <updated>2020-04-28T03:17:56.717Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/04/28/HtCAO1msxLr6vUX.png" alt></p><a id="more"></a><p>在这里只介绍linux下相关软件安装及环境配置，至于linux的基本知识和原理可以百度哈。</p><p>首先在linux上有三种安装软件的方式分别是：</p><blockquote><p>rpm安装</p><p>解压缩安装</p><p>yum安装</p></blockquote><h3 id="JDK安装（rpm安装）"><a href="#JDK安装（rpm安装）" class="headerlink" title="JDK安装（rpm安装）"></a>JDK安装（rpm安装）</h3><ol><li>这里我们选择rpm安装jdk</li></ol><ul><li><p>在window上下载rpm包，百度jdk rpm即可</p></li><li><p>如果是自己买的服务器可以用xshell远程连接服务器，然后用xftp将rpm包上传到远程服务器/usr/lib目录下或者虚拟机</p><p>这里推荐还是在服务器/usr/lib目录下新建java目录,将rpm上传在java目录</p></li></ul><ol start="2"><li><p>检查本地是否有安装过jdk</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">"1.8.0_121"</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_121-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.121-b13, mixed mode)</span><br><span class="line"><span class="comment"># 检查服务器本地的jdk的版本</span></span><br><span class="line"><span class="comment"># -qa 列出所有包</span></span><br><span class="line"><span class="comment"># |grep 是否包含某个字符串</span></span><br><span class="line">[root@localhost /]<span class="comment"># rpm -qa|grep jdk</span></span><br><span class="line">jdk1.8.0_121-1.8.0_121-fcs.x86_64</span><br><span class="line"><span class="comment"># 卸载 -e</span></span><br><span class="line"><span class="comment"># 强制删除 --nodeps （可选）</span></span><br><span class="line">[root@localhost /]<span class="comment"># rpm -e --nodeps jdk1.8.0_121-1.8.0_121-fcs.x86_64</span></span><br><span class="line"><span class="comment">#卸载后查看是否还有jdk版本</span></span><br><span class="line">[root@localhost /]<span class="comment"># java -version</span></span><br><span class="line">-bash: /usr/bin/java: No such file or directory</span><br></pre></td></tr></tbody></table></figure></li><li><p>安装JDK</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装java rpm</span></span><br><span class="line">[root@localhost /]<span class="comment"># cd /usr/lib/java</span></span><br><span class="line"><span class="comment"># i 安装</span></span><br><span class="line"><span class="comment"># v 显示安装过程</span></span><br><span class="line"><span class="comment"># h 显示进度</span></span><br><span class="line">[root@localhost java]<span class="comment"># rpm -ivh jdk-8u221-linux-x64.rpm</span></span><br><span class="line"><span class="comment">#有选择时，选择y</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>配置环境变量</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost java]<span class="comment"># cd /</span></span><br><span class="line"><span class="comment">#vim 编辑</span></span><br><span class="line">[root@localhost /]<span class="comment">#vim /etc/profile</span></span><br><span class="line"><span class="comment">#在文本末尾添加以下内容</span></span><br><span class="line">JAVA_HOME=/usr/lib/java/jdk1.8.0_221-amd64</span><br><span class="line">CLASSPATH=%JAVA_HOME%/lib:%JAVA_HOME%/jre/lib</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$JAVA_HOME</span>/jre/bin</span><br><span class="line"><span class="built_in">export</span> PATH CLASSPATH JAVA_HOME</span><br><span class="line"></span><br><span class="line"><span class="comment">#编辑后按ESC输入冒号（:）然后wq回车</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>验证</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使环境变量生效</span></span><br><span class="line">[root@localhost /]<span class="comment"># source /etc/profile</span></span><br><span class="line">[root@localhost /]<span class="comment"># Java</span></span><br></pre></td></tr></tbody></table></figure></li></ol><h3 id="Tomcat安装（解压缩安装）"><a href="#Tomcat安装（解压缩安装）" class="headerlink" title="Tomcat安装（解压缩安装）"></a>Tomcat安装（解压缩安装）</h3><p>1.这里选择解压缩安装Tomcat</p><ul><li>下载后缀为tar.gz的tomcat包</li><li>使用xshell将包至于/usr/lib/tomcat，没有这个目录自行新建</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># cd /usr/lib/tomcat</span></span><br><span class="line">[root@localhost tomcat]<span class="comment"># ls</span></span><br><span class="line">apache-tomcat-9.0.22.tar.gz</span><br><span class="line"> <span class="comment"># 解压</span></span><br><span class="line">[root@localhost tomcat]<span class="comment"># tar -zxvf apache-tomcat-9.0.22.tar.gz</span></span><br></pre></td></tr></tbody></table></figure><p>3、运行Tomcat，进入bin目录，如同在Windows下的操作</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动tomcat</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ./startup.sh</span></span><br><span class="line"><span class="comment"># 关闭tomcat</span></span><br><span class="line">[root@localhost bin]<span class="comment"># ./shutdown.sh</span></span><br></pre></td></tr></tbody></table></figure><p>4、打开Linux的防火墙端口，如果是阿里云，需要阿里云的安全组策略（只有这个开放才是真正的被访问）是开放的</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看firewall服务状态</span></span><br><span class="line">[root@localhost /]<span class="comment"># systemctl status firewalld</span></span><br><span class="line"><span class="comment"># firewall服务开启</span></span><br><span class="line">[root@localhost /]<span class="comment"># service firewalld start</span></span><br><span class="line"><span class="comment"># firewall服务重启</span></span><br><span class="line">[root@localhost /]<span class="comment"># service firewalld restart</span></span><br><span class="line"><span class="comment"># firewall服务关闭</span></span><br><span class="line">[root@localhost /]<span class="comment"># service firewalld stop</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看防火墙规则</span></span><br><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --list-all    # 查看全部信息</span></span><br><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --list-ports  # 只看端口信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启端口</span></span><br><span class="line"><span class="comment"># --zone 作用域</span></span><br><span class="line"><span class="comment"># --add-port=80/tcp  添加端口，格式为：端口/通讯协议</span></span><br><span class="line"><span class="comment"># --permanent   永久生效，没有此参数重启后失效</span></span><br><span class="line">[root@localhost /]<span class="comment"># firewall-cmd --zone=public --add-port=80/tcp --permanent</span></span><br><span class="line"><span class="comment"># 重启防火墙：</span></span><br><span class="line">[root@localhost /]<span class="comment"># systemctl restart firewalld.service</span></span><br></pre></td></tr></tbody></table></figure><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/28/HtCAO1msxLr6vUX.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="服务器" scheme="http://www.ktbear.top/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://www.ktbear.top/tags/linux/"/>
    
      <category term="jdk" scheme="http://www.ktbear.top/tags/jdk/"/>
    
      <category term="Tomcat" scheme="http://www.ktbear.top/tags/Tomcat/"/>
    
  </entry>
  
  <entry>
    <title>GitHub高效查询开源项目</title>
    <link href="http://www.ktbear.top/github/20/"/>
    <id>http://www.ktbear.top/github/20/</id>
    <published>2020-04-20T10:33:00.000Z</published>
    <updated>2020-04-28T03:21:23.458Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/04/28/PrhQIK3kY1JbzTa.png" alt></p><a id="more"></a><h5 id="如何在github上寻找最适合自己的项目呢？"><a href="#如何在github上寻找最适合自己的项目呢？" class="headerlink" title="如何在github上寻找最适合自己的项目呢？"></a>如何在github上寻找最适合自己的项目呢？</h5><ol><li><p>首先你可以根据名字搜索你想要的项目</p><ul><li>in:name 项目名</li></ul></li><li><p>当你用名字搜索出来时出现几万个项目，这时你不知道如何选择可以再限制星星数量来缩小范围</p><ul><li>stars:>数量</li></ul></li><li><p>此时出现的项目还是很多，并且右多种编程语言，这时你可以再次限制语言范围</p><ul><li>language:语言</li></ul></li></ol><ol start="4"><li><p>你需要找怎样的项目呢，此时可以根据项目描述搜索</p><ul><li>in:description 描述</li></ul></li><li><p>你又感觉有些项目太旧了，于是想找一份新的</p><ul><li>pushed:>年份</li></ul></li><li><p>还可以根据readme进行搜索</p><ul><li>in:readme 描述</li></ul></li><li><p>实例如下：</p><ul><li>组合搜索<br><img src="https://i.loli.net/2020/04/28/f3joacR6hzYinFN.png" alt></li><li>搜索结果如下<br><img src="https://i.loli.net/2020/04/28/9qnw6h4QXTafIrV.png" alt><br>我们看出根据限制条件项目数量明显减少，这样一来可以减少我们浪费大量的时间去搜索一些无用而又不适合自己的项目�搜索一些无用而又不适合自己的项目</li></ul></li></ol><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/28/PrhQIK3kY1JbzTa.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="github" scheme="http://www.ktbear.top/categories/github/"/>
    
    
      <category term="github" scheme="http://www.ktbear.top/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>聊一聊微服务（下）</title>
    <link href="http://www.ktbear.top/service2/20/"/>
    <id>http://www.ktbear.top/service2/20/</id>
    <published>2020-04-20T10:33:00.000Z</published>
    <updated>2020-05-06T09:13:07.443Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/05/06/TVG52RcIoYkU6Km.jpg" alt></p><a id="more"></a><h2 id="七、服务网关"><a href="#七、服务网关" class="headerlink" title="七、服务网关"></a>七、服务网关</h2><h4 id="1-什么是服务网关？"><a href="#1-什么是服务网关？" class="headerlink" title="1.什么是服务网关？"></a>1.什么是服务网关？</h4><p>服务网关 = 路由转发 + 过滤器,在一开始也有提到过，当客户端要请求一个系统中的多个微服务时，这时有多个微服务（模块）就要请求几次，明显这样不利于管理，于是出现就加入了服务网关，只需要客户端与网关交互，然后由网关来进行请求转发。</p><p><img src="https://i.loli.net/2020/05/06/X2yO9eRWGmhaLdF.png" alt="1588587290249"></p><h4 id="2-Spring-Cloud集成了Zuul组件，实现服务网关。"><a href="#2-Spring-Cloud集成了Zuul组件，实现服务网关。" class="headerlink" title="2.Spring Cloud集成了Zuul组件，实现服务网关。"></a>2.Spring Cloud集成了Zuul组件，实现服务网关。</h4><ul><li><p>什么是Zuul?</p><p>Zuul是Netflix提供的一个开源的API网关服务器，是客户端和网站后端所有请求的中间层，对外开放-个API,将所有请求导入统- -的入口， 屏蔽了服务端的具体实现逻辑，Zuul 可以实现反向代理的功能，在网关内部实现动态路由、身份认证、IP 过滤、数据监控等,并且Zuul还自带了负载均衡功能。</p></li></ul><h4 id="3-在父工程下创建maven工程zuul，pom-xml配置"><a href="#3-在父工程下创建maven工程zuul，pom-xml配置" class="headerlink" title="3.在父工程下创建maven工程zuul，pom.xml配置"></a>3.在父工程下创建maven工程zuul，pom.xml配置</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>zuul<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">   <span class="comment"><!--zuul组件也需要注册，引入client--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-client<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><!--zuul依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-zuul<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-创建application-yml配置文件"><a href="#4-创建application-yml配置文件" class="headerlink" title="4.创建application.yml配置文件"></a>4.创建application.yml配置文件</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8030</span></span><br><span class="line">  <span class="comment">#名称</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">gateway</span></span><br><span class="line"><span class="comment">#注册到注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaulttZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line"><span class="attr">zuul:</span></span><br><span class="line">  <span class="attr">routes:</span></span><br><span class="line">    <span class="attr">provider:</span> <span class="string">/p/**</span> <span class="comment">#给服务提供者provider设置映射，后面访问就可以通过/p/**来直接访问而不需要端口号去访问</span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-创建启动类"><a href="#5-创建启动类" class="headerlink" title="5.创建启动类"></a>5.创建启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.EnableAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.zuul.EnableZuulProxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@EnableZuulProxy</span>：包含了EnableZuulServer,设置该类是网关的启动类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@EnableAutoConfiguration</span>: 可以帮助Spring Boot应用将所有符合条件的<span class="doctag">@Configuration</span>配置加载到当前Spring Boot创建并使用的loC容器中。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@EnableZuulProxy</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZuulApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(ZuulApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="6-按顺序启动（eurekaserver注册中心-gt-eurekaclient服务提供者-gt-zuul服务网关）"><a href="#6-按顺序启动（eurekaserver注册中心-gt-eurekaclient服务提供者-gt-zuul服务网关）" class="headerlink" title="6.按顺序启动（eurekaserver注册中心->eurekaclient服务提供者->zuul服务网关）"></a>6.按顺序启动（eurekaserver注册中心->eurekaclient服务提供者->zuul服务网关）</h4><h4 id="7-浏览器输入：http-localhost-8030-p-student-findAll-通过服务网关的端口去访问任何一个服务提供者，返回结果"><a href="#7-浏览器输入：http-localhost-8030-p-student-findAll-通过服务网关的端口去访问任何一个服务提供者，返回结果" class="headerlink" title="7.浏览器输入：http://localhost:8030/p/student/findAll, 通过服务网关的端口去访问任何一个服务提供者，返回结果"></a>7.浏览器输入：<a href="http://localhost:8030/p/student/findAll" target="_blank" rel="noopener">http://localhost:8030/p/student/findAll</a>, 通过服务网关的端口去访问任何一个服务提供者，返回结果</h4><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[{<span class="attr">"id"</span>:<span class="number">1</span>,<span class="attr">"name"</span>:<span class="string">"刘备"</span>,<span class="attr">"age"</span>:<span class="number">24</span>},{<span class="attr">"id"</span>:<span class="number">2</span>,<span class="attr">"name"</span>:<span class="string">"张飞"</span>,<span class="attr">"age"</span>:<span class="number">22</span>},{<span class="attr">"id"</span>:<span class="number">3</span>,<span class="attr">"name"</span>:<span class="string">"关羽"</span>,<span class="attr">"age"</span>:<span class="number">23</span>}]</span><br></pre></td></tr></tbody></table></figure><h2 id="八、Ribbon实现负载均衡"><a href="#八、Ribbon实现负载均衡" class="headerlink" title="八、Ribbon实现负载均衡"></a>八、Ribbon实现负载均衡</h2><h4 id="1-什么是负载均衡？"><a href="#1-什么是负载均衡？" class="headerlink" title="1.什么是负载均衡？"></a>1.什么是负载均衡？</h4><p>将负载（工作任务，访问请求）进行平衡、分摊到多个操作单元（服务器，组件）上进行执行。是解决高性能，单点故障（高可用），扩展性（水平伸缩）的终极解决方案，简单讲就是一个人将每次到来的一个任务随机均衡分配给多个人来完成，这样来达到减轻人的工作压力，这里的”任务”表示请求，”人”表示服务器。</p><h4 id="2-什么是Ribbon？"><a href="#2-什么是Ribbon？" class="headerlink" title="2.什么是Ribbon？"></a>2.什么是Ribbon？</h4><p>Spring Cloud Ribbon是一个负载均衡解决方案，Ribbon是Netfix公司发布的负载均衡器，而SpringCloud进行了整合，是基于Netfix Ribbon实现的，是一个用于对HTTP请求进行控制的负载均衡客户端。在注册中心对Ribbon进行注册之后，Ribon就可以基于某种均衡算法、如轮询、随机、加权轮询、加权随机等自动帮助服务消费者调用接口，开发者也可以根据需求自定义Ribbon负载均衡算法，实际开发中，Spring Cloud Ribbon需要结合Spring Cloud Eureka来使用，Eureka Server提供所有可以调用的服务提供者列表， Ribbon基于特定的负载均衡算法从这些服务提供者中选择要调用的具体实例。</p><p><img src="https://i.loli.net/2020/05/06/GJrciZ9xlFKjBwy.png" alt="1588597010570"></p><h4 id="3-在父工程下创建Maven工程，pom-xml配置"><a href="#3-在父工程下创建Maven工程，pom-xml配置" class="headerlink" title="3.在父工程下创建Maven工程，pom.xml配置"></a>3.在父工程下创建Maven工程，pom.xml配置</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>ribbon<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--所需的eureka-client依赖--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-client<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-创建application-yml配置文件-1"><a href="#4-创建application-yml配置文件-1" class="headerlink" title="4.创建application.yml配置文件"></a>4.创建application.yml配置文件</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8040</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#当前服务注册在Eureka Server上的名称</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">ribbon</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注册中心访问地址</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment">#是否将当前服务的ip注册到EurekaServer</span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-创建启动类-1"><a href="#5-创建启动类-1" class="headerlink" title="5.创建启动类"></a>5.创建启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RibbonApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(RibbonApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span> <span class="comment">//开启负载均衡</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="6-修改eurekaclient模块的Ctroller层"><a href="#6-修改eurekaclient模块的Ctroller层" class="headerlink" title="6.修改eurekaclient模块的Ctroller层"></a>6.修改eurekaclient模块的Ctroller层</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.dao.StudentRepository;</span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/student"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StudentController</span> </span>{</span><br><span class="line">    <span class="comment">//当前端口号，从配置文件中读取端口号</span></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"${server.port}"</span>)</span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StudentRepository studentRepository;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findAll();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Student <span class="title">findById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line">        <span class="keyword">return</span> studentRepository.findById(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/save"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping</span>(<span class="string">"/update"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(@RequestBody Student student)</span></span>{</span><br><span class="line">        studentRepository.saveOrUpdate(student);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@DeleteMapping</span>(<span class="string">"/deleteById/{id}"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span> <span class="keyword">long</span> id)</span>{</span><br><span class="line">        studentRepository.deleteById(id);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试负载均衡（需要添加的地方）</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/port"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">port</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"当前端口"</span>+<span class="keyword">this</span>.port;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="7-创建Ctroller层"><a href="#7-创建Ctroller层" class="headerlink" title="7.创建Ctroller层"></a>7.创建Ctroller层</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/ribbon"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RibbonController</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * 调用eurekaclient模块下的Controller里面的接口</span></span><br><span class="line"><span class="comment">     * getForEntity中的的get为GET请求,参数一：要调用的地址 参数二：结果集</span></span><br><span class="line"><span class="comment">     * restTemplate.getForEntity().getBody()作用与restTemplate.getForObject（）作用相同</span></span><br><span class="line"><span class="comment">     * 用服务提供者名字provider替换localhost:8010</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll2</span><span class="params">()</span></span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://provider/student/findAll"</span>,Collection<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试负载均衡</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/port"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">port</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> restTemplate.getForObject(<span class="string">"http://provider/student/port"</span>, String<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="8-依次开启服务：eurekaServer注册中心-gt-eurekaclient服务提供者-8080-gt-eurekaclient服务提供者-8081-gt-Ribbon"><a href="#8-依次开启服务：eurekaServer注册中心-gt-eurekaclient服务提供者-8080-gt-eurekaclient服务提供者-8081-gt-Ribbon" class="headerlink" title="8.依次开启服务：eurekaServer注册中心->eurekaclient服务提供者(8080)->eurekaclient服务提供者(8081)->Ribbon"></a>8.依次开启服务：eurekaServer注册中心->eurekaclient服务提供者(8080)->eurekaclient服务提供者(8081)->Ribbon</h4><p>注：这里开启的是两个服务提供者端口号不同</p><h4 id="9-浏览器输入：http-localhost-8040-ribbon-port，这里也可以检验查询方法，这里展示的是为了能直观的看到效果"><a href="#9-浏览器输入：http-localhost-8040-ribbon-port，这里也可以检验查询方法，这里展示的是为了能直观的看到效果" class="headerlink" title="9.浏览器输入：http://localhost:8040/ribbon/port，这里也可以检验查询方法，这里展示的是为了能直观的看到效果"></a>9.浏览器输入：<a href="http://localhost:8040/ribbon/port，这里也可以检验查询方法，这里展示的是为了能直观的看到效果" target="_blank" rel="noopener">http://localhost:8040/ribbon/port，这里也可以检验查询方法，这里展示的是为了能直观的看到效果</a></h4><p>目的是检验负载均衡，这时会显示“当前端口8080”，刷新一次端口号变成了“当前端口8081”，每刷新一次都会在这两个端口相互切换，如果开了n个服务提供者就在n个端口之间相互切换，这样一来就减少了单个服务器的压力。</p><h2 id="九、Feign"><a href="#九、Feign" class="headerlink" title="九、Feign"></a>九、Feign</h2><h4 id="1-什么是Feign？"><a href="#1-什么是Feign？" class="headerlink" title="1.什么是Feign？"></a>1.什么是Feign？</h4><p>与Ribbon -样，Feign 也是由Netflix提供的负载均衡器，是基于ribbon进行封装的，Feign 是一个声明式、模版化的Web Service客户端，它简化了开发者编写Web服务客户端的操作，开发者可以通过简单的接口和注解来调用HTTP API, Spring Cloud Feign,它整合了Ribbon和Hystrix,具有可插拔、基于注解、负载均衡、服务熔断等-系列便捷功能。相比较于Ribbon + RestTemplate的方式，Feign 大大简化了代码的开发，Feign 支持多种注解，包括Feign注解、JAX-RS注解、Spring MVC注解等，Spring Cloud对Feing进行了优化，整合了Ribbon和Eureka,从而让Feign的使用更加方便。</p><h4 id="2-Ribbon和Feign的区别"><a href="#2-Ribbon和Feign的区别" class="headerlink" title="2.Ribbon和Feign的区别"></a>2.Ribbon和Feign的区别</h4><p>Ribbon是一个通用的HTTP客户端工具，Feign 是基于Ribbon实现的。</p><h4 id="3-Feign的特点"><a href="#3-Feign的特点" class="headerlink" title="3.Feign的特点"></a>3.Feign的特点</h4><ul><li>Feign是一个声明式的Web Service客户端。</li><li>支持Feign注解、Spring MVC注解、JAX-RS注解。</li><li>Feign 基于Ribbon实现，使用起来更加简单。</li><li>Feign 集成了Hystrix，具备服务熔断的功能。</li></ul><h4 id="4-代码实现：创建模块，pom-xml配置"><a href="#4-代码实现：创建模块，pom-xml配置" class="headerlink" title="4.代码实现：创建模块，pom.xml配置"></a>4.代码实现：创建模块，pom.xml配置</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>feign<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--相关依赖--></span></span><br><span class="line">            <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-client<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-openfeign<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-创建application-yml"><a href="#5-创建application-yml" class="headerlink" title="5.创建application.yml"></a>5.创建application.yml</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8050</span></span><br><span class="line">  <span class="comment">#名称</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">feign</span></span><br><span class="line"><span class="comment">#注册到注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaulttZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h4 id="6-启动类"><a href="#6-启动类" class="headerlink" title="6.启动类"></a>6.启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(FeignApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="7-创建实体类"><a href="#7-创建实体类" class="headerlink" title="7.创建实体类"></a>7.创建实体类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="8-创建声明式接口"><a href="#8-创建声明式接口" class="headerlink" title="8.创建声明式接口"></a>8.创建声明式接口</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.Feign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@FeignClient</span>: 需要访问服务提供者的名字</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@GetMapping</span>("/student/findAll")： 需要访问服务提供者的接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"provider"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">FeignProviderClient</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/student/findAll"</span>)</span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/student/port"</span>)</span><br><span class="line">    <span class="comment">//查询当前接口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">port</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="9-创建Controller层"><a href="#9-创建Controller层" class="headerlink" title="9.创建Controller层"></a>9.创建Controller层</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.Feign.FeignProviderClient;</span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/feign"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignController</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FeignProviderClient feignProviderClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * feignProviderClient:刚创建的声明式接口</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/findAll"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll2</span><span class="params">()</span> </span>{</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> feignProviderClient.findAll();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//测试负载均衡</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/port"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">port</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> feignProviderClient.port();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>10.按顺序启动，类似于Ribbon，只是这里是用Feign去调用服务提供者</p><p><img src="https://i.loli.net/2020/05/06/OFbqzfRX1Vgm7kt.png" alt="1588660326959"></p><p>这里注册中心已经注册了四个，分别是一个Feign、两个Provider服务提供者、一个Ribbon，其中Feign和Ribbon都有负载均衡的作用，任何一个都会均衡调用服务提供者。</p><h4 id="11-在Feign配置文件中开启Feign熔断机制，application-yml"><a href="#11-在Feign配置文件中开启Feign熔断机制，application-yml" class="headerlink" title="11.在Feign配置文件中开启Feign熔断机制，application.yml"></a>11.在Feign配置文件中开启Feign熔断机制，application.yml</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8050</span></span><br><span class="line">  <span class="comment">#名称</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">feign</span></span><br><span class="line"><span class="comment">#注册到注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaulttZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启熔断机制</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><h4 id="12-创建FeignProviderClient接口的实现类FeignError-定义容错处理逻辑，通过-Component-注解将FeignError实例注入loC容器中。"><a href="#12-创建FeignProviderClient接口的实现类FeignError-定义容错处理逻辑，通过-Component-注解将FeignError实例注入loC容器中。" class="headerlink" title="12.创建FeignProviderClient接口的实现类FeignError,定义容错处理逻辑，通过@Component 注解将FeignError实例注入loC容器中。"></a>12.创建FeignProviderClient接口的实现类FeignError,定义容错处理逻辑，通过@Component 注解将FeignError实例注入loC容器中。</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.Feign.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> feign.Feign;</span><br><span class="line"><span class="keyword">import</span> org.example.Feign.FeignProviderClient;</span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FeignError</span> <span class="keyword">implements</span> <span class="title">FeignProviderClient</span> </span>{</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">port</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"服务器维护中......"</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="13-在FeignProviderClient定义处通过-FeignClient的fallback属性设置映射。"><a href="#13-在FeignProviderClient定义处通过-FeignClient的fallback属性设置映射。" class="headerlink" title="13.在FeignProviderClient定义处通过@FeignClient的fallback属性设置映射。"></a>13.在FeignProviderClient定义处通过@FeignClient的fallback属性设置映射。</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.Feign;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.Feign.impl.FeignError;</span><br><span class="line"><span class="keyword">import</span> org.example.entity.Student;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@FeignClient</span>: 需要访问服务提供者的名字</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *  <span class="doctag">@GetMapping</span>("/student/findAll")： 需要访问服务提供者的接口</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FeignClient</span>(value = <span class="string">"provider"</span>,fallback = FeignError<span class="class">.<span class="keyword">class</span>)//要加入的</span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">interface</span> <span class="title">FeignProviderClient</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/student/findAll"</span>)</span><br><span class="line">    <span class="comment">//查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Collection<Student> <span class="title">findAll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/student/port"</span>)</span><br><span class="line">    <span class="comment">//查询当前接口</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">port</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>这里只启动注册中心和Feigin，然后去调用服务提供者的业务，由于服务提供者我们没有启动，所以浏览器会显示刚刚我们设置的容错机制—-“服务器维护中”，如果不设置服务容错机制就会显示404或者500等信息。</li></ul><h2 id="十、Hystrix容错机制"><a href="#十、Hystrix容错机制" class="headerlink" title="十、Hystrix容错机制"></a>十、Hystrix容错机制</h2><h4 id="1-什么是容错机制？"><a href="#1-什么是容错机制？" class="headerlink" title="1.什么是容错机制？"></a>1.什么是容错机制？</h4><p>随着分布式、微服务项目的快速发展，各个服务之间的通讯，难免出现依赖关系，若某一个单元出现故障，就很容易因依赖关系而发生故障的蔓延，为了解决这样的问题，容错作为其中一项很重要的技术也广为人知，类似于电路中的保险丝，如果电路中某处出现故障就会烧断保险丝而防止故障继续蔓延。</p><h4 id="2-设计原则"><a href="#2-设计原则" class="headerlink" title="2.设计原则"></a>2.设计原则</h4><ul><li>服务隔离机制</li><li>服务降级机制</li><li>熔断机制</li><li>提供实时的监控和报警功能</li><li>提供实时的配置修改功能</li></ul><h4 id="3-介绍"><a href="#3-介绍" class="headerlink" title="3.介绍"></a>3.介绍</h4><p>Hystrix数据监控需要结合SpringBoot Actuator组件来使用，Actuator 提供了对服务的健康监控、数据统计，可以通过hystrix-stream节点获取监控的请求数据，提供了可视化的监控界面。</p><h4 id="4-实例—创建hystrix模块，pom-xml配置"><a href="#4-实例—创建hystrix模块，pom-xml配置" class="headerlink" title="4.实例—创建hystrix模块，pom.xml配置"></a>4.实例—创建hystrix模块，pom.xml配置</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>hystrix<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="comment"><!--eureka-client依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-client<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><!--feign依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-openfeign<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><!--actuator数据监控依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.boot<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-boot-starter-actuator<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.7.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><!--hystrix依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-hystrix<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><!--数据监控可视化依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-hystrix-dashboard<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-创建配置文件，application-yml"><a href="#5-创建配置文件，application-yml" class="headerlink" title="5.创建配置文件，application.yml"></a>5.创建配置文件，application.yml</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义端口</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8060</span></span><br><span class="line">  <span class="comment">#名称</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">hystrix</span></span><br><span class="line"><span class="comment">#注册到注册中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaulttZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#是否开启熔断机制</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#数据监控</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">'hystrix.stream'</span></span><br></pre></td></tr></tbody></table></figure><h4 id="6-创建启动类"><a href="#6-创建启动类" class="headerlink" title="6.创建启动类"></a>6.创建启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.circuitbreaker.EnableCircuitBreaker;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.netflix.hystrix.dashboard.EnableHystrixDashboard;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@EnableCircuitBreaker</span>: 声明启用数据监控</span></span><br><span class="line"><span class="comment"> *<span class="doctag">@EnableHystrixDashboard</span>： 声明启用可视化数据监控</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HystrixApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(HystrixApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="7-与Feign一样创建Controller层、实体类、Feign接口与实现类"><a href="#7-与Feign一样创建Controller层、实体类、Feign接口与实现类" class="headerlink" title="7.与Feign一样创建Controller层、实体类、Feign接口与实现类"></a>7.与Feign一样创建Controller层、实体类、Feign接口与实现类</h4><h4 id="8-启动：注册中心-gt-服务提供者-gt-hystrix模块"><a href="#8-启动：注册中心-gt-服务提供者-gt-hystrix模块" class="headerlink" title="8.启动：注册中心->服务提供者->hystrix模块"></a>8.启动：注册中心->服务提供者->hystrix模块</h4><ul><li>启动成功之后，访问<a href="http://localhost:8060/actuator/hystrix.stream可以监控到请求数据" target="_blank" rel="noopener">http://localhost:8060/actuator/hystrix.stream可以监控到请求数据</a></li><li>访问<a href="http://localhost:8060/hystrix，可以看到可视化的监控界面,输入要监控的地址节点即可看到该节点的可视化数据监控。" target="_blank" rel="noopener">http://localhost:8060/hystrix，可以看到可视化的监控界面,输入要监控的地址节点即可看到该节点的可视化数据监控。</a></li></ul><p><img src="https://i.loli.net/2020/05/06/lqV6m32zQHu8nvs.png" alt="1588667837381"></p><p>再新打开一个窗口输入hystrix接口地址调用查询方法findAll便可以看到如下数据监控</p><p><img src="https://i.loli.net/2020/05/06/UoW5RSfqBdGlJv6.png" alt="1588669311295"></p><h2 id="十-一、Spring-Cloud配置中心"><a href="#十-一、Spring-Cloud配置中心" class="headerlink" title="十 一、Spring Cloud配置中心"></a>十 一、Spring Cloud配置中心</h2><h4 id="1-为什么要使用配置中心？"><a href="#1-为什么要使用配置中心？" class="headerlink" title="1.为什么要使用配置中心？"></a>1.为什么要使用配置中心？</h4><p>由于一个一个微服务都有自己的配置文件，每次修改都需要找到对应的微服务的配置文件修改，然后重新启动，那么如果又上百个或者上千个我们也这样去改吗？显然这样做是不合理的，于是就可以将所有的配置文件整合在一个配置中心，需要修改时直接在配置中心修改。</p><h4 id="2-Spring-Cloud-Config"><a href="#2-Spring-Cloud-Config" class="headerlink" title="2.Spring Cloud Config"></a>2.Spring Cloud Config</h4><p>通过服务端可以为多个客户端提供配置服务。Spring Cloud Config可以将配置文件存储在本地，也可以将配置文件存储在远程Git仓库，创建Config Server,通过它管理所有的配置文件。</p><h4 id="3-本地配置中心"><a href="#3-本地配置中心" class="headerlink" title="3.本地配置中心"></a>3.本地配置中心</h4><ul><li><p>在父工程下创建Maven工程，pom.xml配置</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>nativeconfigserver<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="comment"><!--config依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-config-server<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建application.yml</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8762</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nativeconfigserver</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">native</span>  <span class="comment">#配置文件的获取方式</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">native:</span></span><br><span class="line">          <span class="attr">search-locations:</span> <span class="string">calsspath:/shared</span> <span class="comment">#本地配置文件路径</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>resources路径下创建shared文件夹，并在此路径下创建configclient-dev.yml</p></li><li><p>创建启动类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.config.server.EnableConfigServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span>    <span class="comment">//声明配置中心</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NativeConfigServerApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(NativeConfigServerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h4 id="4-创建本地配置中心客户端读取本地配置中心的配置文件"><a href="#4-创建本地配置中心客户端读取本地配置中心的配置文件" class="headerlink" title="4.创建本地配置中心客户端读取本地配置中心的配置文件"></a>4.创建本地配置中心客户端读取本地配置中心的配置文件</h4><ul><li><p>在父工程下创建客户端模块，pom.xml</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>nativeconfigclient<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="comment"><!--config依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-config<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建bootstrap.yml配置文件，用于配置加载配置中心文件的内容</p><p>注:配置文件名必须为bootstrap</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">configclient</span> <span class="comment">#客户端名字</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">dev</span>  <span class="comment">#与客户端名字拼接起来作为文件名字找到与拼接名字一致的配置中心配置文件</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">uri:</span>  <span class="string">http://localhost:8762</span>  <span class="comment">#配置中心地址</span></span><br><span class="line">      <span class="attr">fail-fast:</span> <span class="literal">true</span>  <span class="comment">#设置客户端优先判断Config Server获取是否正常。</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建启动类</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NativeConfigClientApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(NativeConfigClientApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建Controller层</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/native"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NativeConfigClientController</span> </span>{</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"${server.port}"</span>)</span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"foo"</span>)</span><br><span class="line">    <span class="keyword">private</span> String foo;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于返回shared文件下的配置中心文件里面的端口和foo值</span></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.port+<span class="string">"---"</span>+<span class="keyword">this</span>.foo;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动：注册中心->本地配置中心->本地配置中心客户端</p><p>浏览器输入本地配置中心客户端的地址，结果返回8070—foo version 1，可以看出是调用了本地配置中心的配置文件。</p></li></ul><h2 id="十二、服务跟踪"><a href="#十二、服务跟踪" class="headerlink" title="十二、服务跟踪"></a>十二、服务跟踪</h2><h4 id="1-为什么需要服务跟踪"><a href="#1-为什么需要服务跟踪" class="headerlink" title="1.为什么需要服务跟踪"></a>1.为什么需要服务跟踪</h4><p>在微服务架构下，往往有成百上千个微小的服务，同时又存在服务与服务之间调用，之间是非常的复杂，所以服务跟踪可以跟踪记录一次用户请求都发起了哪些调用，经过哪些服务处理，并且记录每一次调用所涉及的服务的详细信息，通过日志快速定位是调用失败的环节。</p><h4 id="2-Spring-Cloud-Zipkin"><a href="#2-Spring-Cloud-Zipkin" class="headerlink" title="2.Spring Cloud Zipkin"></a>2.Spring Cloud Zipkin</h4><p>Zipkin是-一个可以采集并且跟踪分布式系统中请求数据的组件,让开发者可以更加直观的监控到请求在各个微服务所耗费的时间等，Zipkin: Zipkin Server. Zipkin Client。</p><h4 id="3-创建zipkinserver模块，pom-xml"><a href="#3-创建zipkinserver模块，pom-xml" class="headerlink" title="3.创建zipkinserver模块，pom.xml"></a>3.创建zipkinserver模块，pom.xml</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>zipkinserver<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">          <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.boot<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-boot-starter-web<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="comment"><!--排除这个slf4j-log4j12造成的冲突--></span></span><br><span class="line">            <span class="tag"><<span class="name">exclusions</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">exclusion</span>></span></span><br><span class="line">                    <span class="tag"><<span class="name">groupId</span>></span>org.slf4j<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">                    <span class="tag"><<span class="name">artifactId</span>></span>slf4j-log4j12<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">                <span class="tag"></<span class="name">exclusion</span>></span></span><br><span class="line">            <span class="tag"></<span class="name">exclusions</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"><!--zipkin依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>io.zipkin.java<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>zipkin-server<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.9.4<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">        <span class="comment"><!--可视化界面--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>io.zipkin.java<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>zipkin-autoconfigure-ui<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.9.4<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="4-创建配置文件"><a href="#4-创建配置文件" class="headerlink" title="4.创建配置文件"></a>4.创建配置文件</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9090</span></span><br><span class="line"></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">metrics:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">auto-time-requests:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><h4 id="5-创建启动类-2"><a href="#5-创建启动类-2" class="headerlink" title="5.创建启动类"></a>5.创建启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> zipkin.server.internal.EnableZipkinServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableZipkinServer</span>  <span class="comment">//声明启动ZipkinServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZipkinServerApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(ZipkinServerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="6-创建zipkinclient模块-pom-xml"><a href="#6-创建zipkinclient模块-pom-xml" class="headerlink" title="6.创建zipkinclient模块,pom.xml"></a>6.创建zipkinclient模块,pom.xml</h4><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">parent</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>springcloud<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">parent</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>zipkinclient<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line">        <span class="comment"><!--zipkinclient依赖--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-zipkin<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">        </span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.springframework.cloud<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>spring-cloud-starter-netflix-eureka-client<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>2.0.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h4 id="7-创建配置文件"><a href="#7-创建配置文件" class="headerlink" title="7.创建配置文件"></a>7.创建配置文件</h4><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8090</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">zipkinclient</span></span><br><span class="line">  <span class="attr">sleuth:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">client:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span> <span class="comment">#设置开启请求跟踪</span></span><br><span class="line">    <span class="attr">sampler:</span></span><br><span class="line">      <span class="attr">probability:</span> <span class="number">1.0</span>  <span class="comment">#设置采样比例，默认是1.0</span></span><br><span class="line">  <span class="attr">zipkin:</span></span><br><span class="line">    <span class="attr">base-url:</span> <span class="string">http://localhost:9090/</span>  <span class="comment">#zipkin Server地址</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:8761/eureka/</span></span><br></pre></td></tr></tbody></table></figure><h4 id="8-创建启动类"><a href="#8-创建启动类" class="headerlink" title="8.创建启动类"></a>8.创建启动类</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZipkinApplication</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        SpringApplication.run(ZipkinApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="9-创建Controller层-1"><a href="#9-创建Controller层-1" class="headerlink" title="9.创建Controller层"></a>9.创建Controller层</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/zipkin"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZipkinController</span> </span>{</span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"${server.port}"</span>)</span><br><span class="line">    <span class="keyword">private</span> String port;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping</span>(<span class="string">"/index"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span></span>{</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.port;</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="10-启动：注册中心-gt-zipkinserver模块-gt-zipkinclient模块"><a href="#10-启动：注册中心-gt-zipkinserver模块-gt-zipkinclient模块" class="headerlink" title="10.启动：注册中心->zipkinserver模块->zipkinclient模块"></a>10.启动：注册中心->zipkinserver模块->zipkinclient模块</h4><h4 id="11-浏览器输入：http-localhost-9090-zipkin-（可视化图形界面）"><a href="#11-浏览器输入：http-localhost-9090-zipkin-（可视化图形界面）" class="headerlink" title="11.浏览器输入：http://localhost:9090/zipkin/ （可视化图形界面）"></a>11.浏览器输入：<a href="http://localhost:9090/zipkin/" target="_blank" rel="noopener">http://localhost:9090/zipkin/</a> （可视化图形界面）</h4><p><img src="https://i.loli.net/2020/05/06/w3WyrfZ5CqusHzp.png" alt="1588691911516"></p><p>我们可以新打开一个窗口输入zipkinclient模块的地址进行调用：<a href="http://localhost:8090/zipkin/index，返回图形界面便可以看到跟踪记录。，返回图形界面便可以看到跟踪记录。" target="_blank" rel="noopener">http://localhost:8090/zipkin/index，返回图形界面便可以看到跟踪记录。，返回图形界面便可以看到跟踪记录。</a></p><blockquote><p>声明：此文章是结合B站’楠哥教你学Java’视频自己整理出来的笔记，如有不清楚的可以去看楠哥视频。�</p></blockquote><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/05/06/TVG52RcIoYkU6Km.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="springCloud" scheme="http://www.ktbear.top/categories/springCloud/"/>
    
    
      <category term="微服务" scheme="http://www.ktbear.top/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="springCloud" scheme="http://www.ktbear.top/tags/springCloud/"/>
    
      <category term="笔记" scheme="http://www.ktbear.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>docker部署springboot项目</title>
    <link href="http://www.ktbear.top/zh/20/"/>
    <id>http://www.ktbear.top/zh/20/</id>
    <published>2020-04-20T08:20:00.000Z</published>
    <updated>2020-04-20T10:59:32.397Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><h5 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h5><blockquote><p>需要的知识</p></blockquote><ul><li>Linux操作系统</li><li>docker(了解git的工作方式即可)</li></ul><h5 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h5><blockquote><p>xshell(用来连接linux服务器)<br>xftp用来给linux服务器上传文件<br>sqlyog(或者navicat)在服务器上解析.sql脚本<br>maven(idea自带) 用来打包</p></blockquote><h5 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h5><p>简单介绍一下，docker我理解的就是更方便的部署工具，如果有玩过服务器的同学都知道，在linux服务器上配置mysql是一件挺麻烦的事，而用了docker，只需要几个命令，就可以配置好mysql。</p><p>docker 的三个概念:</p><p>仓库：仓库就类比于github仓库，上面存储着各种各样版本的软件<br>镜像，我们从docker上拉取一个软件初始就是个镜像<br>容器，容器就是镜像运行时，可以用的软件<br>类比一下好理解，镜像就是java中的类，而容器则是由类生成的对象，类无法直接使用，而对象可以。</p><p>接下来开始实操</p><p>我们按照官网来</p><p>在安装docker前，先安装docker的包</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">  device-mapper-persistent-data \</span><br><span class="line">  lvm2</span><br></pre></td></tr></tbody></table></figure><p>配置docker的仓库，从docker官方仓库下载会太慢，我们就将仓库配置到阿里云(类似于maven的仓库配置)</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></tbody></table></figure><h5 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h5><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></tbody></table></figure><p>运行中出现Is this ok,选择y</p><p>要继续配置一下阿里云镜像加速,按如下步骤完成即可.</p><p>步骤2，是写配置文件</p><ol><li><p>mkdir -p /etc/docker</p></li><li><p>vim /etc/docker/daemon.json</p></li><li><p>systemctl daemon-reload</p></li><li><p>systemctl restart docker</p><ul><li>步骤2的配置文件格式<br>{<br>“registry-mirrors”: [“https://｛自已的编码｝.mirror.aliyuncs.com”]<br>}<figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在阿里云镜像云查看镜像加速器配置</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">开启docker</span><br><span class="line"></span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br><span class="line">跑一个docker版的helloworld，类似于java的hello，证明安装成功</span><br><span class="line"></span><br><span class="line">sudo docker run hello-world</span><br><span class="line"></span><br><span class="line">出现下图内容，表示docker运行成功</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##### 服务器的配置</span><br><span class="line">服务器配置总结为三个，防火墙，端口，和安全组</span><br><span class="line"></span><br><span class="line">1.查看防火墙状态，如未开启要开启防火墙，我的是开启的</span><br><span class="line"></span><br><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line">如果没开启，开启防火墙的命令</span><br><span class="line"></span><br><span class="line">systemctl start firewalld.service</span><br><span class="line"></span><br><span class="line">添加对外开放的端口，我是开了三个端口，一个80(Http端口),一个8080(tomcat)，一个2206(mysql)</span><br><span class="line">```linux</span><br><span class="line">1. firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line">2. firewall-cmd --zone=public --add-port=8080/tcp --permanent</span><br><span class="line">3. firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br></pre></td></tr></tbody></table></figure>开完端口，要重新加载防火墙</li></ul></li></ol><p>firewall-cmd –reload</p><p>查看开放的端口</p><p>firewall-cmd –list-ports</p><p>配置安全组:百度如何配置进入配安全组的地方，按照下图配置的条件配置即可</p><h5 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h5><p>从docker hub上查找mysql镜像</p><p>docker search mysql</p><p>从docker hub上拉取mysql,我拉取的mysql版本是mysql5.7</p><p>docker pull mysql:5.7</p><p>运行mysql，开放的端口是3306，密码是123456， -d是后台运行</p><p>docker run -p 3306:3306 –name mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.7</p><p>docker ps 查看容器创建成功</p><p>有个命令，可以进入容器内部,ctrl+p+q可以以后台运行的方式退出这个软件</p><p>docker exec -it 容器的id /bin/bash</p><p>连接服务器上的mysql</p><p>执行我提供的sql脚本就好了</p><p>执行成功</p><p>将springboot项目打成jar包<br>将applicayion.yml中的url中的localhost改成你服务器的公网ip，还有将密码改成你服务器上mysql的密码</p><p>打包的命令有两个，mvn clean ,mvn package</p><p>在target文件夹出现jar表示成功</p><h5 id="编写Dockfile文件"><a href="#编写Dockfile文件" class="headerlink" title="编写Dockfile文件"></a>编写Dockfile文件</h5><p>将springboot jar包项目打包成Docker镜像</p><p>在 /home 目录下创建docker文件夹</p><p>mkdir /home/docker<br>使用xftp上传jar包</p><p>编写Dockerfile文件</p><p>vim Dockerfile</p><p>完整命令, vim的使用方法：点击i开始编写，编写完后点击esc，点击冒号，输入wq保存</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">FROM java:8</span><br><span class="line">ADD blog-0.0.1-SNAPSHOT.jar /blog.jar</span><br><span class="line">EXPOSE 8080</span><br><span class="line">ENTRYPOINT ["java","-jar","/blog.jar"]</span><br></pre></td></tr></tbody></table></figure><p>解释</p><p>#注意，docker命令全部大写，这是规定。</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#注意，docker命令全部大写，这是规定。</span><br><span class="line">#   From 关键字表示，jar包依赖的环境。java:8  相当于jdk1.8</span><br><span class="line">FROM java:8</span><br><span class="line"> </span><br><span class="line">#ADD命令 </span><br><span class="line">#   blog-0.0.1-SNAPSHOT.jar：这是你上传jar包的名称。</span><br><span class="line">#   /blog.jar：这是自定义的名称。但是注意要有之前的/</span><br><span class="line">ADD blog-0.0.1-SNAPSHOT.jar /blog.jar</span><br><span class="line"> </span><br><span class="line">#MAINTAINER  作者名称。可以删除不写。</span><br><span class="line">MAINTAINER zhangxiaosan</span><br><span class="line"> </span><br><span class="line">#EXPOSE 项目暴露的端口号</span><br><span class="line">EXPOSE 8080</span><br><span class="line"> </span><br><span class="line">#/blog.jar此处的名称要和ADD命令后面的一样。</span><br><span class="line">ENTRYPOINT ["java","-jar","/blog.jar"]</span><br></pre></td></tr></tbody></table></figure><p>在docker文件夹下执行如下命令</p><p>docker build -t blog:1.0 .</p><p>说明:<br>blog 代表要打包成的镜像名称。按照自己实际情况写。<br>:1.0 代表版本号，可以不写则默认为latest<br>. 代表为当前目录。这就是为什么一直在步骤一文件夹中进行操作,并且Dockerfile在此文件夹中的原因。</p><p>若之前Dockerfile不在步骤一的文件夹中 则需要指定到对应的地址。</p><p>接下来用docker images 就可以查看到这个镜像已经被创建好了，接下来运行这个镜像就可以了</p><p>docker run –name blog -d -p 80:8080 blog:1.0</p><p>此时就可以用你的公网ip访问了，我绑定了域名，可以用域名访问。</p><p>还有个命令要提下，可以查看容器运行时的日志</p><p>docker logs 容器id</p><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
      <category term="服务器" scheme="http://www.ktbear.top/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="linux" scheme="http://www.ktbear.top/tags/linux/"/>
    
      <category term="mysql" scheme="http://www.ktbear.top/tags/mysql/"/>
    
      <category term="docker" scheme="http://www.ktbear.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>APlayer音乐插件</title>
    <link href="http://www.ktbear.top/Details/12/"/>
    <id>http://www.ktbear.top/Details/12/</id>
    <published>2020-04-12T05:19:00.000Z</published>
    <updated>2020-04-28T01:51:15.510Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/04/25/yRjL7mZUGAhdE9K.png" alt></p><a id="more"></a><h3 id="1-APlayer"><a href="#1-APlayer" class="headerlink" title="1. APlayer"></a>1. APlayer</h3><p>APlayer是大佬们开发出来的一款HTML5漂亮的音乐插件，<a href="https://github.com/MoePlayer/APlayer" target="_blank" rel="noopener">GitHub下载地址</a>。</p><h3 id="2-使用"><a href="#2-使用" class="headerlink" title="2. 使用"></a>2. 使用</h3><p>下载好插件放到自己的工程，</p><ul><li>在需要加入的html页面导入插件css、js</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"APlayer.min.css"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"APlayer.min.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure><ul><li>在需要放置插件的位置处的html元素赋予id属性，比如</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"aplayer"</span>></span><span class="tag"></<span class="name">div</span>></span></span><br></pre></td></tr></tbody></table></figure><ul><li>在body后加入以下</li></ul><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="actionscript"><span class="keyword">const</span> ap = <span class="keyword">new</span> APlayer({</span></span><br><span class="line"><span class="javascript">    container: <span class="built_in">document</span>.getElementById(<span class="string">'aplayer'</span>),</span></span><br><span class="line">    audio: [{</span><br><span class="line"><span class="actionscript">        name: <span class="string">'name1'</span>,</span></span><br><span class="line"><span class="actionscript">        artist: <span class="string">'artist1'</span>,</span></span><br><span class="line"><span class="actionscript">        url: <span class="string">'url1.mp3'</span>,</span></span><br><span class="line"><span class="actionscript">        cover: <span class="string">'cover1.jpg'</span></span></span><br><span class="line">    },</span><br><span class="line">     {</span><br><span class="line"><span class="actionscript">        name: <span class="string">'name2'</span>,</span></span><br><span class="line"><span class="actionscript">        artist: <span class="string">'artist2'</span>,</span></span><br><span class="line"><span class="actionscript">        url: <span class="string">'url2.mp3'</span>,</span></span><br><span class="line"><span class="actionscript">        cover: <span class="string">'cover2.jpg'</span></span></span><br><span class="line">    }</span><br><span class="line">           ]</span><br><span class="line">});</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure><p>或者自定义js然后引入即可</p><ul><li>name: 歌曲名</li><li>artist: 歌曲作者</li><li>cover: 歌曲图片</li><li>url: 音乐地址</li></ul><p>这里我介绍个好用的音乐外链获取网站:<a href="http://music.xf1433.com/" target="_blank" rel="noopener">http://music.xf1433.com/</a></p><h3 id="3-可选参数"><a href="#3-可选参数" class="headerlink" title="3. 可选参数"></a>3. 可选参数</h3><style>table th:nth-of-type(1){width:70px}</style><table><thead><tr><th>名称</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>mini</td><td>false</td><td>开启迷你模式</td></tr><tr><td>fixed</td><td>false</td><td>开启吸底模式</td></tr><tr><td>autoplay</td><td>false</td><td>音频自动播放</td></tr><tr><td>theme</td><td>‘#b7daff’</td><td>主题色</td></tr><tr><td>loop</td><td>‘all’</td><td>音频循环播放, 可选值: ‘all’, ‘one’, ‘none’</td></tr><tr><td>preload</td><td>‘auto’</td><td>预加载，可选值: ‘none’, ‘metadata’, ‘auto’</td></tr><tr><td>volume</td><td>0.7</td><td>默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</td></tr><tr><td>container</td><td>document.querySelector(‘.aplayer’)</td><td>播放器容器元素</td></tr></tbody></table><h3 id="4-API"><a href="#4-API" class="headerlink" title="4. API"></a>4. API</h3><ul><li><code>ap.play()</code>: 播放音频</li><li><code>ap.pause()</code>: 暂停音频</li><li><code>ap.audio.currentTime</code>: 返回音频当前播放时间</li><li><code>ap.audio.duration</code>: 返回音频总时间</li><li><code>ap.audio.paused</code>: 返回音频是否暂停</li></ul><p>这里列举的都是常用的，详细请到官网<a href="https://aplayer.js.org" target="_blank" rel="noopener">https://aplayer.js.org</a></p><p>完成以上工作你就可以看到界面中有音乐了，但是还有个问题出现了，就是不能刷新页面继续上次的记录播放，看到许多人说用frame标签和ajax、<a href="http://bsify.admui.com/jquery-pjax/" target="_blank" rel="noopener">pjax</a>:</p><ul><li><p>frame例子</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">html</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">frameset</span> <span class="attr">cols</span>=<span class="string">"0%,100%"</span>></span></span><br><span class="line">  <span class="comment"><!--音乐插件另外放在music页面--></span></span><br><span class="line"><span class="tag"><<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"music.html"</span>></span></span><br><span class="line"> <span class="comment"><!--首页页面--></span></span><br><span class="line"><span class="tag"><<span class="name">frame</span> <span class="attr">src</span>=<span class="string">"index.html"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">frameset</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">html</span>></span></span><br></pre></td></tr></tbody></table></figure><p>缺点: 这样音乐可以连续播放，但没办法在index.html页面中控制音频播放</p></li><li><p>pjax (和ajax相似，相当于ajax的加强版)</p><p>首先下载<a href="https://github.com/defunkt/jquery-pjax" target="_blank" rel="noopener">jquery-pjax插件</a></p><p>引入jquery和jquery-pjax</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br><span class="line"><span class="tag"><<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/jquery.pjax/2.0.1/jquery.pjax.min.js"</span>></span><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure><p>将要局部更新的内容用div包裹，指定属性id</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>></span></span><br><span class="line">    <span class="comment"><!-- 要替换的内容 --></span></span><br><span class="line">  <span class="tag"></<span class="name">div</span>></span></span><br></pre></td></tr></tbody></table></figure><p>在body后定义js,下面将会使id为container下的所有a标签跳转，没有后台需添加fragment容器</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag"><<span class="name">script</span>></span></span><br><span class="line"><span class="javascript">$(<span class="built_in">document</span>).pjax(<span class="string">'a[target!="_blank"]'</span>, <span class="string">'#container'</span>, {</span></span><br><span class="line"><span class="actionscript">    fragment: <span class="string">"#container"</span>,</span></span><br><span class="line">    timeout: 5000</span><br><span class="line">});</span><br><span class="line"><span class="tag"></<span class="name">script</span>></span></span><br></pre></td></tr></tbody></table></figure></li></ul><p>最后感谢各位大佬们的贡献！</p><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/25/yRjL7mZUGAhdE9K.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="插件" scheme="http://www.ktbear.top/categories/%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="音乐" scheme="http://www.ktbear.top/tags/%E9%9F%B3%E4%B9%90/"/>
    
      <category term="pjax" scheme="http://www.ktbear.top/tags/pjax/"/>
    
  </entry>
  
  <entry>
    <title>spring笔记</title>
    <link href="http://www.ktbear.top/note/10/"/>
    <id>http://www.ktbear.top/note/10/</id>
    <published>2020-04-10T07:33:00.000Z</published>
    <updated>2020-04-28T03:30:03.304Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/04/25/bhAtar6LYvPQFz4.jpg" alt></p><a id="more"></a><h6 id="1-导入maven依赖"><a href="#1-导入maven依赖" class="headerlink" title="1. 导入maven依赖"></a>1. 导入maven依赖</h6><ul><li>注意：导入相关依赖，为了减少手写也可直接导入spring-webmvc依赖包</li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">groupId</span>></span>org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>spring_01<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line"><span class="comment"><!--导入spring及其相关依赖（aop,beans,context,core,expression,spring-web：spring-webmvc包含spring相关依赖--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>org.springframework<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>spring-webmvc<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>5.2.2.RELEASE<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"><span class="comment"><!--    单元测试--></span></span><br><span class="line">    <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">groupId</span>></span>junit<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">artifactId</span>></span>junit<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">version</span>></span>4.12<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">scope</span>></span>test<span class="tag"></<span class="name">scope</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"><span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h6 id="2-ApplicationContext-xml全局配置文件"><a href="#2-ApplicationContext-xml全局配置文件" class="headerlink" title="2.ApplicationContext.xml全局配置文件"></a>2.ApplicationContext.xml全局配置文件</h6><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd"</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!-- 指定扫描org.example包下的所有类中的注解  --></span></span><br><span class="line">    <span class="tag"><<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"org.example"</span>></span><span class="tag"></<span class="name">context:component-scan</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--开启注解--></span></span><br><span class="line">    <span class="tag"><<span class="name">context:annotation-config</span>/></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"><!--spring容器中bean对象--></span></span><br><span class="line">  <span class="comment"><!--  <bean id="user" class="org.example.pojo.User"></span></span><br><span class="line"><span class="comment">        <property name="name" value="chengLong"/></span></span><br><span class="line"><span class="comment">    </bean></span></span><br><span class="line"><span class="comment">--></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!-- more bean definitions go here --></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">beans</span>></span></span><br></pre></td></tr></tbody></table></figure><h6 id="3-静态代理"><a href="#3-静态代理" class="headerlink" title="3. 静态代理"></a>3. 静态代理</h6><ul><li><p>代理模式分为三个角色：被代理角色、代理角色、客户角色，以租房为实例进行演示：</p><ul><li>租房抽象接口类</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*租房抽象接口*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Rent</span> </span>{</span><br><span class="line">    <span class="comment">//出租房屋的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>被代理对象类（房东）</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*真实角色（房东）*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Host</span> <span class="keyword">implements</span> <span class="title">Rent</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"xx要出租房屋"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>代理对象类（租房中介）</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*代理角色（房屋中介）*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">proxy</span> <span class="keyword">implements</span> <span class="title">Rent</span> </span>{</span><br><span class="line">    <span class="comment">//被代理的类</span></span><br><span class="line">    <span class="keyword">private</span> Host host;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHost</span><span class="params">(Host host)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>{</span><br><span class="line">        <span class="comment">//调用代理类特有的方法实现不修改原有代码（host类）而实现功能的增加</span></span><br><span class="line">        pre();</span><br><span class="line"></span><br><span class="line">        host.rent();</span><br><span class="line"></span><br><span class="line">        after();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//代理类特有方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pre</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"【Debug】"</span>+<span class="string">"带客户看房"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="comment">//代理类特有方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"【Debug】"</span>+<span class="string">"收取租金并签定租赁合同"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>客户类</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*客户*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        Host host = <span class="keyword">new</span> Host();</span><br><span class="line"></span><br><span class="line">        proxy proxy = <span class="keyword">new</span> proxy();</span><br><span class="line">        proxy.setHost(host);</span><br><span class="line">        proxy.rent();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h6 id="4-动态代理"><a href="#4-动态代理" class="headerlink" title="4. 动态代理"></a>4. 动态代理</h6><ul><li>动态代理即动态生成代理类，实例以静态代理为基础做升级。</li><li>抽象接口</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*租房抽象接口*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Rent</span> </span>{</span><br><span class="line">    <span class="comment">//出租房屋的方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>被代理类</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*真实角色（房东）*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Host</span> <span class="keyword">implements</span> <span class="title">Rent</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"xx要出租房屋"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>实现<strong>InvocationHandler</strong>接口的类用于动态生成代理</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationHandler;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*动态代理万能模板,InvocationHandler这个类自动生成代理类*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyInvocationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Object target;<span class="comment">//被代理的接口</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTarget</span><span class="params">(Object target)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成得到代理类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getProxy</span><span class="params">()</span></span>{</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(<span class="keyword">this</span>.getClass().getClassLoader(),</span><br><span class="line">                target.getClass().getInterfaces(),<span class="keyword">this</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//处理代理实例并返回结果</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line"></span><br><span class="line">        before(method.getName());</span><br><span class="line">        Object result = method.invoke(target, args);</span><br><span class="line">        after(method.getName());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">//特有方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(String b)</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"[Debug]:"</span>+b+<span class="string">"方法初始化"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(String a)</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"[Debug]:"</span>+a+<span class="string">"方法结束"</span>);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>测试类</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.proxy;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*客户*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        <span class="comment">//真实角色</span></span><br><span class="line">        Host host = <span class="keyword">new</span> Host();</span><br><span class="line">        <span class="comment">//代理角色，不存在</span></span><br><span class="line">        ProxyInvocationHandler pid = <span class="keyword">new</span> ProxyInvocationHandler();</span><br><span class="line">        <span class="comment">//设置要代理的对象</span></span><br><span class="line">        pid.setTarget(host);</span><br><span class="line">        <span class="comment">//动态生成代理类</span></span><br><span class="line">        Rent proxy =(Rent) pid.getProxy();</span><br><span class="line">        proxy.rent();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>输出结果</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Debug]:rent方法初始化</span><br><span class="line">xx要出租房屋</span><br><span class="line">[Debug]:rent方法结束</span><br></pre></td></tr></tbody></table></figure><h6 id="5-aop面向切面编程"><a href="#5-aop面向切面编程" class="headerlink" title="5. aop面向切面编程"></a>5. aop面向切面编程</h6><p>​ 5.1 aop面向切面编程有三种方法分别是面向接口的aop配置、面向切面的aop配置、注解配置。</p><p>方法一：</p><ul><li>接口和实体类(被代理类、目标类)</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*业务抽象接口*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.service;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*真实业务*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">add</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"添加用户"</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"删除用户"</span>);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"修改用户"</span>);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span> </span>{</span><br><span class="line">        System.out.println(<span class="string">"查询用户"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>要增强的特定方法（通知）</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.advice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.MethodBeforeAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*方法一    前置方法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Before</span> <span class="keyword">implements</span> <span class="title">MethodBeforeAdvice</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(Method method, Object[] objects, Object o)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        System.out.println(method.getName()+<span class="string">"方法被初始化了"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.advice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.aop.AfterReturningAdvice;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*方法一    后置方法*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">After</span> <span class="keyword">implements</span> <span class="title">AfterReturningAdvice</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(Object o, Method method, Object[] objects, Object o1)</span> <span class="keyword">throws</span> Throwable </span>{</span><br><span class="line">        System.out.println(method.getName()+<span class="string">"方法结束了"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>装配bean和配置aop</li></ul><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        https://www.springframework.org/schema/aop/spring-aop.xsd"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><!--注册bean--></span></span><br><span class="line">    <span class="tag"><<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"before"</span> <span class="attr">class</span>=<span class="string">"org.example.advice.Before"</span>></span><span class="tag"></<span class="name">bean</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userService"</span> <span class="attr">class</span>=<span class="string">"org.example.service.UserServiceImpl"</span>></span><span class="tag"></<span class="name">bean</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"after"</span> <span class="attr">class</span>=<span class="string">"org.example.advice.After"</span>></span><span class="tag"></<span class="name">bean</span>></span></span><br><span class="line">    <span class="comment"><!--方法二--></span></span><br><span class="line">    <span class="tag"><<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"aspect"</span> <span class="attr">class</span>=<span class="string">"org.example.aspect.Aspect"</span>></span><span class="tag"></<span class="name">bean</span>></span></span><br><span class="line">    <span class="comment"><!--aop配置   方法一 原生态面向接口（功能强大）--></span></span><br><span class="line">    <span class="tag"><<span class="name">aop:config</span>></span></span><br><span class="line">        <span class="comment"><!--expression:表达式，execution(返回类型 具体类.方法(参数)) *代表所有类型--></span></span><br><span class="line">        <span class="tag"><<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* org.example.service.UserServiceImpl.*(..))"</span>/></span></span><br><span class="line">        <span class="comment"><!--环绕通知 前置--></span></span><br><span class="line">        <span class="tag"><<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"before"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span>></span><span class="tag"></<span class="name">aop:advisor</span>></span></span><br><span class="line">        <span class="comment"><!--后置--></span></span><br><span class="line">        <span class="tag"><<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">"after"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span>></span><span class="tag"></<span class="name">aop:advisor</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"></<span class="name">aop:config</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--方法二 面向切面--></span></span><br><span class="line">   <span class="tag"><<span class="name">aop:config</span>></span></span><br><span class="line">       <span class="tag"><<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">"pointcut"</span> <span class="attr">expression</span>=<span class="string">"execution(* org.example.service.UserServiceImpl.*(..))"</span>/></span></span><br><span class="line">       <span class="tag"><<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">"aspect"</span> ></span></span><br><span class="line">           <span class="tag"><<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">"before"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span>></span><span class="tag"></<span class="name">aop:before</span>></span></span><br><span class="line">           <span class="tag"><<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">"after"</span> <span class="attr">pointcut-ref</span>=<span class="string">"pointcut"</span>></span><span class="tag"></<span class="name">aop:after</span>></span></span><br><span class="line">       <span class="tag"></<span class="name">aop:aspect</span>></span></span><br><span class="line">   <span class="tag"></<span class="name">aop:config</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">beans</span>></span></span><br></pre></td></tr></tbody></table></figure><ul><li>测试类</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.example.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.example.service.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">        ClassPathXmlApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">"ApplicationContext.xml"</span>);</span><br><span class="line">        <span class="comment">//获取接口对象</span></span><br><span class="line">        UserService userService = context.getBean(<span class="string">"userService"</span>, UserService<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">       userService.add();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>运行结果</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add方法被初始化了</span><br><span class="line">添加用户</span><br><span class="line">add方法结束了</span><br></pre></td></tr></tbody></table></figure><p>方法二：</p><ul><li>实体类和接口如同方法一，不同之处是通知及配置，通知类如下</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.example.aspect;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*方法二 面向切面*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Aspect</span> </span>{</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"方法执行了"</span>);</span><br><span class="line">    }</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span></span>{</span><br><span class="line">        System.out.println(<span class="string">"方法结束了"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>ApplicationContext.xml配置文件详解方法一</li></ul><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/25/bhAtar6LYvPQFz4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="spring" scheme="http://www.ktbear.top/categories/spring/"/>
    
    
      <category term="spring" scheme="http://www.ktbear.top/tags/spring/"/>
    
      <category term="aop" scheme="http://www.ktbear.top/tags/aop/"/>
    
  </entry>
  
  <entry>
    <title>搭建mybatis</title>
    <link href="http://www.ktbear.top/Details/09/"/>
    <id>http://www.ktbear.top/Details/09/</id>
    <published>2020-04-09T08:42:00.000Z</published>
    <updated>2020-04-28T01:53:01.140Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/04/25/p5w6GHLN7A2VtrP.jpg" alt></p><a id="more"></a><p>MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以对配置和原生Map使用简单的 XML 或注解，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录</p><h6 id="1-基础项目目录结构"><a href="#1-基础项目目录结构" class="headerlink" title="1. 基础项目目录结构"></a>1. 基础项目目录结构</h6><p><img src="https://i.loli.net/2020/04/25/fcR1gSCtBHi2umz.png" alt="load"></p><h6 id="2-maven依赖"><a href="#2-maven依赖" class="headerlink" title="2. maven依赖"></a>2. maven依赖</h6><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8"?></span></span><br><span class="line"><span class="tag"><<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">modelVersion</span>></span>4.0.0<span class="tag"></<span class="name">modelVersion</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="tag"><<span class="name">groupId</span>></span>org.org.example<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">artifactId</span>></span>mybatis_01<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">version</span>></span>1.0-SNAPSHOT<span class="tag"></<span class="name">version</span>></span></span><br><span class="line"><span class="comment"><!--java文件中xml映射默认无法扫描，需加上build即可扫描xml配置文件--></span></span><br><span class="line">    <span class="tag"><<span class="name">build</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">resources</span>></span></span><br><span class="line">            <span class="comment"><!-- resources文件 --></span></span><br><span class="line">            <span class="tag"><<span class="name">resource</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">directory</span>></span>src/main/java<span class="tag"></<span class="name">directory</span>></span></span><br><span class="line">                <span class="comment"><!-- 引入映射文件等 --></span></span><br><span class="line">                <span class="tag"><<span class="name">includes</span>></span></span><br><span class="line">                    <span class="tag"><<span class="name">include</span>></span>**/*.xml<span class="tag"></<span class="name">include</span>></span></span><br><span class="line">                <span class="tag"></<span class="name">includes</span>></span></span><br><span class="line">            <span class="tag"></<span class="name">resource</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">resources</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">build</span>></span></span><br><span class="line">    <span class="tag"><<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><!--mybatis--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>org.mybatis<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>mybatis<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>3.4.6<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line">        <span class="comment"><!--mysql连接驱动--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>MySQL<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>mysql-connector-java<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>5.1.40<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line">        <span class="comment"><!--junit测试--></span></span><br><span class="line">        <span class="tag"><<span class="name">dependency</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">groupId</span>></span>junit<span class="tag"></<span class="name">groupId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">artifactId</span>></span>junit<span class="tag"></<span class="name">artifactId</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">version</span>></span>4.12<span class="tag"></<span class="name">version</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">scope</span>></span>test<span class="tag"></<span class="name">scope</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">dependency</span>></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag"></<span class="name">dependencies</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"></<span class="name">project</span>></span></span><br></pre></td></tr></tbody></table></figure><h6 id="3-全局配置mybatis-config-xml"><a href="#3-全局配置mybatis-config-xml" class="headerlink" title="3. 全局配置mybatis-config.xml"></a>3. 全局配置mybatis-config.xml</h6><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8" ?></span></span><br><span class="line"><span class="meta"><!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>></span></span><br><span class="line"><span class="tag"><<span class="name">configuration</span>></span></span><br><span class="line"><span class="comment"><!--别名，包名默认为类的小写--></span></span><br><span class="line">   <span class="comment"><!--</span></span><br><span class="line"><span class="comment">   <typeAlias type="org.example.pojo.User" alias="User"/></span></span><br><span class="line"><span class="comment">   --></span></span><br><span class="line">    <span class="tag"><<span class="name">typeAliases</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">package</span> <span class="attr">name</span>=<span class="string">"org.example.pojo"</span>/></span></span><br><span class="line">    <span class="tag"></<span class="name">typeAliases</span>></span></span><br><span class="line"><span class="comment"><!--环境--></span></span><br><span class="line">    <span class="tag"><<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>></span></span><br><span class="line">            <span class="tag"><<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/></span></span><br><span class="line">            <span class="tag"><<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>></span></span><br><span class="line">                <span class="tag"><<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"com.mysql.jdbc.Driver"</span>/></span></span><br><span class="line"><span class="comment"><!--?useUnicode=true&amp;characterEncoding=utf8解决中文乱码--></span></span><br><span class="line">                <span class="tag"><<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"jdbc:mysql://localhost:3306/login?useUnicode=true<span class="symbol">&amp;</span>characterEncoding=utf8"</span>/></span></span><br><span class="line">                <span class="tag"><<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"root"</span>/></span></span><br><span class="line">                <span class="tag"><<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"123456"</span>/></span></span><br><span class="line">            <span class="tag"></<span class="name">dataSource</span>></span></span><br><span class="line">        <span class="tag"></<span class="name">environment</span>></span></span><br><span class="line">    <span class="tag"></<span class="name">environments</span>></span></span><br><span class="line"></span><br><span class="line"><span class="comment"><!--映射sql配置文件--></span></span><br><span class="line">    <span class="tag"><<span class="name">mappers</span>></span></span><br><span class="line">        <span class="tag"><<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"org/example/dao/UserMapper.xml"</span>/></span></span><br><span class="line">    <span class="tag"></<span class="name">mappers</span>></span></span><br><span class="line"><span class="tag"></<span class="name">configuration</span>></span></span><br></pre></td></tr></tbody></table></figure><h6 id="4-接口绑定配置文件UserMapper-xml"><a href="#4-接口绑定配置文件UserMapper-xml" class="headerlink" title="4. 接口绑定配置文件UserMapper.xml"></a>4. 接口绑定配置文件UserMapper.xml</h6><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><?xml version="1.0" encoding="UTF-8" ?></span></span><br><span class="line">        <span class="meta"><!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">                <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span></span><br><span class="line"><span class="meta">                <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>></span></span><br><span class="line"><span class="comment"><!--绑定接口全限定类名--></span></span><br><span class="line"><span class="tag"><<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"org.example.dao.UserMapper"</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryUser"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>></span></span><br><span class="line">    select *from login.user</span><br><span class="line"><span class="tag"></<span class="name">select</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryUserById"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"user"</span>></span></span><br><span class="line">    select *from login.user where id=#{id}</span><br><span class="line"><span class="tag"></<span class="name">select</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addUser"</span> <span class="attr">parameterType</span>=<span class="string">"org.example.pojo.User"</span>></span></span><br><span class="line">    insert into login.user (id,username,password) values (#{id},#{username},#{password})</span><br><span class="line"><span class="tag"></<span class="name">insert</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"org.example.pojo.User"</span>></span></span><br><span class="line">        update login.user set username=#{username},paassword=#{password} where id={id}</span><br><span class="line">    <span class="tag"></<span class="name">update</span>></span></span><br><span class="line"></span><br><span class="line"><span class="tag"><<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"deleteUser"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span>></span></span><br><span class="line">        delete from login.user where id=#{id}</span><br><span class="line">    <span class="tag"></<span class="name">delete</span>></span></span><br><span class="line"><span class="tag"></<span class="name">mapper</span>></span></span><br></pre></td></tr></tbody></table></figure><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/25/p5w6GHLN7A2VtrP.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="mybatis" scheme="http://www.ktbear.top/categories/mybatis/"/>
    
    
      <category term="sql" scheme="http://www.ktbear.top/tags/sql/"/>
    
      <category term="jdbc" scheme="http://www.ktbear.top/tags/jdbc/"/>
    
      <category term="框架" scheme="http://www.ktbear.top/tags/%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>使用lombok报错解决</title>
    <link href="http://www.ktbear.top/err/09/"/>
    <id>http://www.ktbear.top/err/09/</id>
    <published>2020-04-09T05:51:00.000Z</published>
    <updated>2020-04-20T06:32:37.537Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p>之前做项目时在使用lombok插件启动项目时报错，在此记录一下</p><a id="more"></a><p>，希望能帮到大家。</p><h4 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ERROR o.a.c.c.C.[.[.[.【dispatcherServlet】 - Servlet.service() <span class="keyword">for</span> servlet 【dispatcherServlet】 in context with path 【】 threw exception 【Handler processing failed; nested exception is java.lang.StackOverflowError】 with root cause</span><br><span class="line">java.lang.StackOverflowError: <span class="keyword">null</span></span><br></pre></td></tr></tbody></table></figure><ul><li>出现以上错误并且实体类之间不停的出现调用，这个问题是由于实体类之间存在关系，在使用lombok的注解时是会默认生成tostring方法，在一方调用另一方的时候就会出现相互调用的情况，所以会出现栈溢出的情况。<h4 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h4></li><li>取消一方实体类的tostring方法，即在需要取消的属性上加上lombok注解@ToString.Exclude或者在类似加上@ToString(exclude=”属性名”)，好了，问题得到解决。</li></ul><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;之前做项目时在使用lombok插件启动项目时报错，在此记录一下&lt;/p&gt;
    
    </summary>
    
    
      <category term="errorNote" scheme="http://www.ktbear.top/categories/errorNote/"/>
    
    
      <category term="java" scheme="http://www.ktbear.top/tags/java/"/>
    
      <category term="lombok" scheme="http://www.ktbear.top/tags/lombok/"/>
    
  </entry>
  
  <entry>
    <title>Hexo快速搭建个人博客</title>
    <link href="http://www.ktbear.top/Details/03/"/>
    <id>http://www.ktbear.top/Details/03/</id>
    <published>2020-03-03T13:50:00.000Z</published>
    <updated>2020-04-20T09:11:22.569Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p>Hexo<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">中文官方网站</a>是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.</p><a id="more"></a><h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>利用Hexo框架diy你的博客，下面我们快速开始吧！</p><h6 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h6><ol><li><p>首先需要安装<a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">node.js</a>环境,接下来在磁盘任意位置新建博客系统项目文件</p></li><li><p>可下载淘宝镜像【cnpm】提升下载速度（可选），没有则可以将下面的cnpm替换成npm安装</p></li><li><p>cnpm install -g hexo-cli （安装Hexo）</p></li><li><p>hexo -v（查看hexo版本）</p></li><li><p>在任意盘符自己创建一个工程文件用于稍后构建工程用</p></li><li><p>命令进入刚建立的工程文件输入 hexo init(初始化工程)</p></li><li><p>hexo n “我的第一篇博客文章”（添加文章）</p></li><li><p>可以进入工程目录下的source/_posts/xxx.md进行编辑文章</p></li><li><p>hexo clean (清除缓存)</p></li><li><p>hexo g(重新生成)</p></li><li><p>启动博客 hexo s</p></li></ol><ul><li>以下是部署到github pages（可选）</li></ul><ol><li><p>cnpm install –save hexo-deployer-git (安装插件)</p></li><li><p>设置_config.yml，将deployment中type的值改为git，仓库repo的值改为github上的地址，添加brach: master</p></li><li><p>hexo d(自动部署)，后面输入github密码</p></li></ol><h5 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h5><ol><li><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">下载主题</a>，下载后放入themes文件下</p></li><li><p>将主题加载进工程，修改_config.yml,将theme的值设置成下载后的主题文件夹名</p></li><li><p>hexo clean</p></li><li><p>hexo g(重新生成)</p></li><li><p>hexo s</p></li><li><p>退出，推到远程github仓库,后面可以通过免费域名访问了,输入登录用户名.github.io即可访问</p></li></ol><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;Hexo&lt;a href=&quot;https://hexo.io/zh-cn/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;中文官方网站&lt;/a&gt;是一个快速, 简洁且高效的博客框架. 让上百个页面在几秒内瞬间完成渲染. Hexo支持Github Flavored Markdown的所有功能, 甚至可以整合Octopress的大多数插件. 并自己也拥有强大的插件系统.&lt;/p&gt;
    
    </summary>
    
    
      <category term="前端" scheme="http://www.ktbear.top/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="博客" scheme="http://www.ktbear.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="node" scheme="http://www.ktbear.top/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>springboot入门</title>
    <link href="http://www.ktbear.top/Details/02/"/>
    <id>http://www.ktbear.top/Details/02/</id>
    <published>2020-03-02T13:40:00.000Z</published>
    <updated>2020-04-28T03:18:51.748Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --><html><head></head><body><p><img src="https://i.loli.net/2020/04/25/y1fDMlYq9PNint3.png" alt></p><a id="more"></a><h2 id="1-初识springboot"><a href="#1-初识springboot" class="headerlink" title="1.初识springboot"></a>1.初识springboot</h2><ul><li>SpringBoot是由Pivotal团队在2013年开始研发、2014年4月发布第一个版本的全新开源的轻量级框架。它基于Spring4.0设计，不仅继承了Spring框架原有的优秀特性，而且还通过简化配置来进一步简化了Spring应用的整个搭建和开发过程。另外SpringBoot通过集成大量的框架使得依赖包的版本冲突，以及引用的不稳定性等问题得到了很好的解决。可能这样说了你还是很懵逼，用通俗易懂的语言将就是帮助我们简化传统的ssm框架等的配置，比如各种繁琐的xml配置。</li></ul><h2 id="2-环境"><a href="#2-环境" class="headerlink" title="2.环境"></a>2.环境</h2><ul><li>jdk</li><li>maven</li><li>idea</li></ul><h2 id="3-springboot优势"><a href="#3-springboot优势" class="headerlink" title="3.springboot优势"></a>3.springboot优势</h2><ol><li>springboot可以帮助我们自动装配javabean</li><li>springboot可以帮我们自动配置事务</li><li>springboot可以帮我们加载配置文件</li><li>springboot内嵌tomcat</li></ol><p>这些都是springboot一些优点，当然还不止这些，比如支持热部署，日志，各种引擎模板，还可以整合其他优秀的框架等等。</p><h2 id="4-入门"><a href="#4-入门" class="headerlink" title="4.入门"></a>4.入门</h2><p>步骤如下：<br>1.首先新建项目选择Spring Initializr，点击右边的next</p><p><img src="https://i.loli.net/2020/04/25/v674kT5obKpPOli.png" alt></p><p>2.然后输入规范包名、项目名，一般是自动生成，然后next</p><p><img src="https://i.loli.net/2020/04/25/KfC5zyuXBnZrs9L.png" alt></p><p>3.选择需要的依赖，这里为了方便演示选择了springWeb依赖，然后next,选择项目存储位置，最后finish,这样下项目初始化完成</p><p><img src="https://i.loli.net/2020/04/25/e4tzyHKEOdgYJil.png" alt></p><p>4.可以删除项目中多余的文件，接下展开文件夹你便可以看到xxxApplication的类啦，这个就是程序主入口，我们先在demo目录下创建一个test目录，并在其下面创建Controller类，然后类上面加Controller注解表示这个类被springboot自动装配到容器中，再加上GetMapping、ResponseBody注解映射，这里加入ResponseBody会在浏览器返回字符串，否则会返回springboot默认的，也就是resources下面的html，由于没有定义页面，启动后会报404错误。</p><p><img src="https://i.loli.net/2020/04/25/RZ8YL6NnD72m4FS.png" alt></p><p>5.找到上面的程序主入口启动项目，等待几秒钟</p><p><img src="https://i.loli.net/2020/04/25/Rjst3AOl8KJVDCM.png" alt></p><p>6.最后浏览器输入localhost:8080，你就可以看到”hello world!”啦</p><p>是不是觉得so easy啊!</p><!-- rebuild by neat --></body></html>]]></content>
    
    <summary type="html">
    
      &lt;!-- build time:Fri May 08 2020 08:10:00 GMT+0800 (GMT+08:00) --&gt;&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2020/04/25/y1fDMlYq9PNint3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="springboot" scheme="http://www.ktbear.top/categories/springboot/"/>
    
    
      <category term="java" scheme="http://www.ktbear.top/tags/java/"/>
    
      <category term="javaWeb" scheme="http://www.ktbear.top/tags/javaWeb/"/>
    
      <category term="springboot" scheme="http://www.ktbear.top/tags/springboot/"/>
    
  </entry>
  
</feed>
